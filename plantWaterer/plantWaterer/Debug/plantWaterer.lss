
plantWaterer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a6  00800100  000012e6  0000135a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012e6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00001400  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001430  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000108  00000000  00000000  00001470  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000221f  00000000  00000000  00001578  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008d2  00000000  00000000  00003797  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000dfc  00000000  00000000  00004069  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000334  00000000  00000000  00004e68  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005b4  00000000  00000000  0000519c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000014c1  00000000  00000000  00005750  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000110  00000000  00000000  00006c11  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
       4:	0c 94 2d 06 	jmp	0xc5a	; 0xc5a <__vector_1>
       8:	0c 94 55 06 	jmp	0xcaa	; 0xcaa <__vector_2>
       c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      10:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      14:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      18:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      1c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      20:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      24:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      28:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      2c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      30:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      34:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      38:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      3c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      40:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      44:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      48:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      4c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      50:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      54:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      58:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      5c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      60:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
      64:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 40       	sbci	r16, 0x00	; 0
      6a:	7a 10       	cpse	r7, r10
      6c:	f3 5a       	subi	r31, 0xA3	; 163
      6e:	00 a0       	ldd	r0, Z+32	; 0x20
      70:	72 4e       	sbci	r23, 0xE2	; 226
      72:	18 09       	sbc	r17, r8
      74:	00 10       	cpse	r0, r0
      76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__stack+0xc3>
      78:	e8 00       	.word	0x00e8	; ????
      7a:	00 e8       	ldi	r16, 0x80	; 128
      7c:	76 48       	sbci	r23, 0x86	; 134
      7e:	17 00       	.word	0x0017	; ????
      80:	00 e4       	ldi	r16, 0x40	; 64
      82:	0b 54       	subi	r16, 0x4B	; 75
      84:	02 00       	.word	0x0002	; ????
      86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
      88:	9a 3b       	cpi	r25, 0xBA	; 186
      8a:	00 00       	nop
      8c:	00 e1       	ldi	r16, 0x10	; 16
      8e:	f5 05       	cpc	r31, r5
      90:	00 00       	nop
      92:	80 96       	adiw	r24, 0x20	; 32
      94:	98 00       	.word	0x0098	; ????
      96:	00 00       	nop
      98:	40 42       	sbci	r20, 0x20	; 32
      9a:	0f 00       	.word	0x000f	; ????
      9c:	00 00       	nop
      9e:	a0 86       	std	Z+8, r10	; 0x08
      a0:	01 00       	.word	0x0001	; ????
      a2:	00 00       	nop
      a4:	10 27       	eor	r17, r16
      a6:	00 00       	nop
      a8:	00 00       	nop
      aa:	e8 03       	fmulsu	r22, r16
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	64 00       	.word	0x0064	; ????
      b2:	00 00       	nop
      b4:	00 00       	nop
      b6:	0a 00       	.word	0x000a	; ????
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	01 00       	.word	0x0001	; ????
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	2c 76       	andi	r18, 0x6C	; 108
      c4:	d8 88       	ldd	r13, Y+16	; 0x10
      c6:	dc 67       	ori	r29, 0x7C	; 124
      c8:	4f 08       	sbc	r4, r15
      ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
      cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
      ce:	ae 59       	subi	r26, 0x9E	; 158
      d0:	e1 b1       	in	r30, 0x01	; 1
      d2:	b7 96       	adiw	r30, 0x27	; 39
      d4:	e5 e3       	ldi	r30, 0x35	; 53
      d6:	e4 53       	subi	r30, 0x34	; 52
      d8:	c6 3a       	cpi	r28, 0xA6	; 166
      da:	e6 51       	subi	r30, 0x16	; 22
      dc:	99 76       	andi	r25, 0x69	; 105
      de:	96 e8       	ldi	r25, 0x86	; 134
      e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <main+0x24>
      e2:	84 26       	eor	r8, r20
      e4:	eb 89       	ldd	r30, Y+19	; 0x13
      e6:	8c 9b       	sbis	0x11, 4	; 17
      e8:	62 ed       	ldi	r22, 0xD2	; 210
      ea:	40 7c       	andi	r20, 0xC0	; 192
      ec:	6f fc       	.word	0xfc6f	; ????
      ee:	ef bc       	out	0x2f, r14	; 47
      f0:	9c 9f       	mul	r25, r28
      f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
      f4:	ba a5       	ldd	r27, Y+42	; 0x2a
      f6:	6f a5       	ldd	r22, Y+47	; 0x2f
      f8:	f4 90       	lpm	r15, Z
      fa:	05 5a       	subi	r16, 0xA5	; 165
      fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
      fe:	5c 93       	st	X, r21
     100:	6b 6c       	ori	r22, 0xCB	; 203
     102:	f9 67       	ori	r31, 0x79	; 121
     104:	6d c1       	rjmp	.+730    	; 0x3e0 <Lcd4_Cmd>
     106:	1b fc       	.word	0xfc1b	; ????
     108:	e0 e4       	ldi	r30, 0x40	; 64
     10a:	0d 47       	sbci	r16, 0x7D	; 125
     10c:	fe f5       	brtc	.+126    	; 0x18c <__bad_interrupt>
     10e:	20 e6       	ldi	r18, 0x60	; 96
     110:	b5 00       	.word	0x00b5	; ????
     112:	d0 ed       	ldi	r29, 0xD0	; 208
     114:	90 2e       	mov	r9, r16
     116:	03 00       	.word	0x0003	; ????
     118:	94 35       	cpi	r25, 0x54	; 84
     11a:	77 05       	cpc	r23, r7
     11c:	00 80       	ld	r0, Z
     11e:	84 1e       	adc	r8, r20
     120:	08 00       	.word	0x0008	; ????
     122:	00 20       	and	r0, r0
     124:	4e 0a       	sbc	r4, r30
     126:	00 00       	nop
     128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
     12a:	0c 33       	cpi	r16, 0x3C	; 60
     12c:	33 33       	cpi	r19, 0x33	; 51
     12e:	33 0f       	add	r19, r19
     130:	98 6e       	ori	r25, 0xE8	; 232
     132:	12 83       	std	Z+2, r17	; 0x02
     134:	11 41       	sbci	r17, 0x11	; 17
     136:	ef 8d       	ldd	r30, Y+31	; 0x1f
     138:	21 14       	cp	r2, r1
     13a:	89 3b       	cpi	r24, 0xB9	; 185
     13c:	e6 55       	subi	r30, 0x56	; 86
     13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
     140:	fe e6       	ldi	r31, 0x6E	; 110
     142:	db 18       	sub	r13, r11
     144:	d1 84       	ldd	r13, Z+9	; 0x09
     146:	4b 38       	cpi	r20, 0x8B	; 139
     148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
     14a:	7c 1d       	adc	r23, r12
     14c:	90 1d       	adc	r25, r0
     14e:	a4 bb       	out	0x14, r26	; 20
     150:	e4 24       	eor	r14, r4
     152:	20 32       	cpi	r18, 0x20	; 32
     154:	84 72       	andi	r24, 0x24	; 36
     156:	5e 22       	and	r5, r30
     158:	81 00       	.word	0x0081	; ????
     15a:	c9 f1       	breq	.+114    	; 0x1ce <pinChange+0x3e>
     15c:	24 ec       	ldi	r18, 0xC4	; 196
     15e:	a1 e5       	ldi	r26, 0x51	; 81
     160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
     162:	11 24       	eor	r1, r1
     164:	1f be       	out	0x3f, r1	; 63
     166:	cf ef       	ldi	r28, 0xFF	; 255
     168:	d8 e0       	ldi	r29, 0x08	; 8
     16a:	de bf       	out	0x3e, r29	; 62
     16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
     16e:	11 e0       	ldi	r17, 0x01	; 1
     170:	a0 e0       	ldi	r26, 0x00	; 0
     172:	b1 e0       	ldi	r27, 0x01	; 1
     174:	e6 ee       	ldi	r30, 0xE6	; 230
     176:	f2 e1       	ldi	r31, 0x12	; 18
     178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
     17a:	05 90       	lpm	r0, Z+
     17c:	0d 92       	st	X+, r0
     17e:	a6 3a       	cpi	r26, 0xA6	; 166
     180:	b1 07       	cpc	r27, r17
     182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>
     184:	0e 94 45 03 	call	0x68a	; 0x68a <main>
     188:	0c 94 71 09 	jmp	0x12e2	; 0x12e2 <_exit>

0000018c <__bad_interrupt>:
     18c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000190 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
     190:	67 2b       	or	r22, r23
     192:	09 f0       	breq	.+2      	; 0x196 <pinChange+0x6>
     194:	73 c0       	rjmp	.+230    	; 0x27c <pinChange+0xec>
     196:	8a 30       	cpi	r24, 0x0A	; 10
     198:	91 05       	cpc	r25, r1
     19a:	11 f4       	brne	.+4      	; 0x1a0 <pinChange+0x10>
     19c:	28 98       	cbi	0x05, 0	; 5
     19e:	08 95       	ret
     1a0:	8b 30       	cpi	r24, 0x0B	; 11
     1a2:	91 05       	cpc	r25, r1
     1a4:	11 f4       	brne	.+4      	; 0x1aa <pinChange+0x1a>
     1a6:	29 98       	cbi	0x05, 1	; 5
     1a8:	08 95       	ret
     1aa:	8c 30       	cpi	r24, 0x0C	; 12
     1ac:	91 05       	cpc	r25, r1
     1ae:	11 f4       	brne	.+4      	; 0x1b4 <pinChange+0x24>
     1b0:	2a 98       	cbi	0x05, 2	; 5
     1b2:	08 95       	ret
     1b4:	8d 30       	cpi	r24, 0x0D	; 13
     1b6:	91 05       	cpc	r25, r1
     1b8:	11 f4       	brne	.+4      	; 0x1be <pinChange+0x2e>
     1ba:	2b 98       	cbi	0x05, 3	; 5
     1bc:	08 95       	ret
     1be:	8e 30       	cpi	r24, 0x0E	; 14
     1c0:	91 05       	cpc	r25, r1
     1c2:	11 f4       	brne	.+4      	; 0x1c8 <pinChange+0x38>
     1c4:	2c 98       	cbi	0x05, 4	; 5
     1c6:	08 95       	ret
     1c8:	8f 30       	cpi	r24, 0x0F	; 15
     1ca:	91 05       	cpc	r25, r1
     1cc:	11 f4       	brne	.+4      	; 0x1d2 <pinChange+0x42>
     1ce:	2d 98       	cbi	0x05, 5	; 5
     1d0:	08 95       	ret
     1d2:	80 31       	cpi	r24, 0x10	; 16
     1d4:	91 05       	cpc	r25, r1
     1d6:	11 f4       	brne	.+4      	; 0x1dc <pinChange+0x4c>
     1d8:	2e 98       	cbi	0x05, 6	; 5
     1da:	08 95       	ret
     1dc:	81 31       	cpi	r24, 0x11	; 17
     1de:	91 05       	cpc	r25, r1
     1e0:	11 f4       	brne	.+4      	; 0x1e6 <pinChange+0x56>
     1e2:	2f 98       	cbi	0x05, 7	; 5
     1e4:	08 95       	ret
     1e6:	84 31       	cpi	r24, 0x14	; 20
     1e8:	91 05       	cpc	r25, r1
     1ea:	11 f4       	brne	.+4      	; 0x1f0 <pinChange+0x60>
     1ec:	40 98       	cbi	0x08, 0	; 8
     1ee:	08 95       	ret
     1f0:	85 31       	cpi	r24, 0x15	; 21
     1f2:	91 05       	cpc	r25, r1
     1f4:	11 f4       	brne	.+4      	; 0x1fa <pinChange+0x6a>
     1f6:	41 98       	cbi	0x08, 1	; 8
     1f8:	08 95       	ret
     1fa:	86 31       	cpi	r24, 0x16	; 22
     1fc:	91 05       	cpc	r25, r1
     1fe:	11 f4       	brne	.+4      	; 0x204 <pinChange+0x74>
     200:	42 98       	cbi	0x08, 2	; 8
     202:	08 95       	ret
     204:	87 31       	cpi	r24, 0x17	; 23
     206:	91 05       	cpc	r25, r1
     208:	11 f4       	brne	.+4      	; 0x20e <pinChange+0x7e>
     20a:	43 98       	cbi	0x08, 3	; 8
     20c:	08 95       	ret
     20e:	88 31       	cpi	r24, 0x18	; 24
     210:	91 05       	cpc	r25, r1
     212:	11 f4       	brne	.+4      	; 0x218 <pinChange+0x88>
     214:	44 98       	cbi	0x08, 4	; 8
     216:	08 95       	ret
     218:	89 31       	cpi	r24, 0x19	; 25
     21a:	91 05       	cpc	r25, r1
     21c:	11 f4       	brne	.+4      	; 0x222 <pinChange+0x92>
     21e:	45 98       	cbi	0x08, 5	; 8
     220:	08 95       	ret
     222:	8a 31       	cpi	r24, 0x1A	; 26
     224:	91 05       	cpc	r25, r1
     226:	11 f4       	brne	.+4      	; 0x22c <pinChange+0x9c>
     228:	46 98       	cbi	0x08, 6	; 8
     22a:	08 95       	ret
     22c:	8e 31       	cpi	r24, 0x1E	; 30
     22e:	91 05       	cpc	r25, r1
     230:	11 f4       	brne	.+4      	; 0x236 <pinChange+0xa6>
     232:	58 98       	cbi	0x0b, 0	; 11
     234:	08 95       	ret
     236:	8f 31       	cpi	r24, 0x1F	; 31
     238:	91 05       	cpc	r25, r1
     23a:	11 f4       	brne	.+4      	; 0x240 <pinChange+0xb0>
     23c:	59 98       	cbi	0x0b, 1	; 11
     23e:	08 95       	ret
     240:	80 32       	cpi	r24, 0x20	; 32
     242:	91 05       	cpc	r25, r1
     244:	11 f4       	brne	.+4      	; 0x24a <pinChange+0xba>
     246:	5a 98       	cbi	0x0b, 2	; 11
     248:	08 95       	ret
     24a:	81 32       	cpi	r24, 0x21	; 33
     24c:	91 05       	cpc	r25, r1
     24e:	11 f4       	brne	.+4      	; 0x254 <pinChange+0xc4>
     250:	5b 98       	cbi	0x0b, 3	; 11
     252:	08 95       	ret
     254:	82 32       	cpi	r24, 0x22	; 34
     256:	91 05       	cpc	r25, r1
     258:	11 f4       	brne	.+4      	; 0x25e <pinChange+0xce>
     25a:	5c 98       	cbi	0x0b, 4	; 11
     25c:	08 95       	ret
     25e:	83 32       	cpi	r24, 0x23	; 35
     260:	91 05       	cpc	r25, r1
     262:	11 f4       	brne	.+4      	; 0x268 <pinChange+0xd8>
     264:	5d 98       	cbi	0x0b, 5	; 11
     266:	08 95       	ret
     268:	84 32       	cpi	r24, 0x24	; 36
     26a:	91 05       	cpc	r25, r1
     26c:	11 f4       	brne	.+4      	; 0x272 <pinChange+0xe2>
     26e:	5e 98       	cbi	0x0b, 6	; 11
     270:	08 95       	ret
     272:	85 97       	sbiw	r24, 0x25	; 37
     274:	09 f0       	breq	.+2      	; 0x278 <pinChange+0xe8>
     276:	73 c0       	rjmp	.+230    	; 0x35e <pinChange+0x1ce>
     278:	5f 98       	cbi	0x0b, 7	; 11
     27a:	08 95       	ret
     27c:	8a 30       	cpi	r24, 0x0A	; 10
     27e:	91 05       	cpc	r25, r1
     280:	11 f4       	brne	.+4      	; 0x286 <pinChange+0xf6>
     282:	28 9a       	sbi	0x05, 0	; 5
     284:	08 95       	ret
     286:	8b 30       	cpi	r24, 0x0B	; 11
     288:	91 05       	cpc	r25, r1
     28a:	11 f4       	brne	.+4      	; 0x290 <pinChange+0x100>
     28c:	29 9a       	sbi	0x05, 1	; 5
     28e:	08 95       	ret
     290:	8c 30       	cpi	r24, 0x0C	; 12
     292:	91 05       	cpc	r25, r1
     294:	11 f4       	brne	.+4      	; 0x29a <pinChange+0x10a>
     296:	2a 9a       	sbi	0x05, 2	; 5
     298:	08 95       	ret
     29a:	8d 30       	cpi	r24, 0x0D	; 13
     29c:	91 05       	cpc	r25, r1
     29e:	11 f4       	brne	.+4      	; 0x2a4 <pinChange+0x114>
     2a0:	2b 9a       	sbi	0x05, 3	; 5
     2a2:	08 95       	ret
     2a4:	8e 30       	cpi	r24, 0x0E	; 14
     2a6:	91 05       	cpc	r25, r1
     2a8:	11 f4       	brne	.+4      	; 0x2ae <pinChange+0x11e>
     2aa:	2c 9a       	sbi	0x05, 4	; 5
     2ac:	08 95       	ret
     2ae:	8f 30       	cpi	r24, 0x0F	; 15
     2b0:	91 05       	cpc	r25, r1
     2b2:	11 f4       	brne	.+4      	; 0x2b8 <pinChange+0x128>
     2b4:	2d 9a       	sbi	0x05, 5	; 5
     2b6:	08 95       	ret
     2b8:	80 31       	cpi	r24, 0x10	; 16
     2ba:	91 05       	cpc	r25, r1
     2bc:	11 f4       	brne	.+4      	; 0x2c2 <pinChange+0x132>
     2be:	2e 9a       	sbi	0x05, 6	; 5
     2c0:	08 95       	ret
     2c2:	81 31       	cpi	r24, 0x11	; 17
     2c4:	91 05       	cpc	r25, r1
     2c6:	11 f4       	brne	.+4      	; 0x2cc <pinChange+0x13c>
     2c8:	2f 9a       	sbi	0x05, 7	; 5
     2ca:	08 95       	ret
     2cc:	84 31       	cpi	r24, 0x14	; 20
     2ce:	91 05       	cpc	r25, r1
     2d0:	11 f4       	brne	.+4      	; 0x2d6 <pinChange+0x146>
     2d2:	40 9a       	sbi	0x08, 0	; 8
     2d4:	08 95       	ret
     2d6:	85 31       	cpi	r24, 0x15	; 21
     2d8:	91 05       	cpc	r25, r1
     2da:	11 f4       	brne	.+4      	; 0x2e0 <pinChange+0x150>
     2dc:	41 9a       	sbi	0x08, 1	; 8
     2de:	08 95       	ret
     2e0:	86 31       	cpi	r24, 0x16	; 22
     2e2:	91 05       	cpc	r25, r1
     2e4:	11 f4       	brne	.+4      	; 0x2ea <pinChange+0x15a>
     2e6:	42 9a       	sbi	0x08, 2	; 8
     2e8:	08 95       	ret
     2ea:	87 31       	cpi	r24, 0x17	; 23
     2ec:	91 05       	cpc	r25, r1
     2ee:	11 f4       	brne	.+4      	; 0x2f4 <pinChange+0x164>
     2f0:	43 9a       	sbi	0x08, 3	; 8
     2f2:	08 95       	ret
     2f4:	88 31       	cpi	r24, 0x18	; 24
     2f6:	91 05       	cpc	r25, r1
     2f8:	11 f4       	brne	.+4      	; 0x2fe <pinChange+0x16e>
     2fa:	44 9a       	sbi	0x08, 4	; 8
     2fc:	08 95       	ret
     2fe:	89 31       	cpi	r24, 0x19	; 25
     300:	91 05       	cpc	r25, r1
     302:	11 f4       	brne	.+4      	; 0x308 <pinChange+0x178>
     304:	45 9a       	sbi	0x08, 5	; 8
     306:	08 95       	ret
     308:	8a 31       	cpi	r24, 0x1A	; 26
     30a:	91 05       	cpc	r25, r1
     30c:	11 f4       	brne	.+4      	; 0x312 <pinChange+0x182>
     30e:	46 9a       	sbi	0x08, 6	; 8
     310:	08 95       	ret
     312:	8e 31       	cpi	r24, 0x1E	; 30
     314:	91 05       	cpc	r25, r1
     316:	11 f4       	brne	.+4      	; 0x31c <pinChange+0x18c>
     318:	58 9a       	sbi	0x0b, 0	; 11
     31a:	08 95       	ret
     31c:	8f 31       	cpi	r24, 0x1F	; 31
     31e:	91 05       	cpc	r25, r1
     320:	11 f4       	brne	.+4      	; 0x326 <pinChange+0x196>
     322:	59 9a       	sbi	0x0b, 1	; 11
     324:	08 95       	ret
     326:	80 32       	cpi	r24, 0x20	; 32
     328:	91 05       	cpc	r25, r1
     32a:	11 f4       	brne	.+4      	; 0x330 <pinChange+0x1a0>
     32c:	5a 9a       	sbi	0x0b, 2	; 11
     32e:	08 95       	ret
     330:	81 32       	cpi	r24, 0x21	; 33
     332:	91 05       	cpc	r25, r1
     334:	11 f4       	brne	.+4      	; 0x33a <pinChange+0x1aa>
     336:	5b 9a       	sbi	0x0b, 3	; 11
     338:	08 95       	ret
     33a:	82 32       	cpi	r24, 0x22	; 34
     33c:	91 05       	cpc	r25, r1
     33e:	11 f4       	brne	.+4      	; 0x344 <pinChange+0x1b4>
     340:	5c 9a       	sbi	0x0b, 4	; 11
     342:	08 95       	ret
     344:	83 32       	cpi	r24, 0x23	; 35
     346:	91 05       	cpc	r25, r1
     348:	11 f4       	brne	.+4      	; 0x34e <pinChange+0x1be>
     34a:	5d 9a       	sbi	0x0b, 5	; 11
     34c:	08 95       	ret
     34e:	84 32       	cpi	r24, 0x24	; 36
     350:	91 05       	cpc	r25, r1
     352:	11 f4       	brne	.+4      	; 0x358 <pinChange+0x1c8>
     354:	5e 9a       	sbi	0x0b, 6	; 11
     356:	08 95       	ret
     358:	85 97       	sbiw	r24, 0x25	; 37
     35a:	09 f4       	brne	.+2      	; 0x35e <pinChange+0x1ce>
     35c:	5f 9a       	sbi	0x0b, 7	; 11
     35e:	08 95       	ret

00000360 <Lcd4_Port>:
     360:	cf 93       	push	r28
     362:	c8 2f       	mov	r28, r24
     364:	80 ff       	sbrs	r24, 0
     366:	07 c0       	rjmp	.+14     	; 0x376 <Lcd4_Port+0x16>
     368:	61 e0       	ldi	r22, 0x01	; 1
     36a:	70 e0       	ldi	r23, 0x00	; 0
     36c:	86 e1       	ldi	r24, 0x16	; 22
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     374:	06 c0       	rjmp	.+12     	; 0x382 <Lcd4_Port+0x22>
     376:	60 e0       	ldi	r22, 0x00	; 0
     378:	70 e0       	ldi	r23, 0x00	; 0
     37a:	86 e1       	ldi	r24, 0x16	; 22
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     382:	c1 ff       	sbrs	r28, 1
     384:	07 c0       	rjmp	.+14     	; 0x394 <Lcd4_Port+0x34>
     386:	61 e0       	ldi	r22, 0x01	; 1
     388:	70 e0       	ldi	r23, 0x00	; 0
     38a:	87 e1       	ldi	r24, 0x17	; 23
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     392:	06 c0       	rjmp	.+12     	; 0x3a0 <Lcd4_Port+0x40>
     394:	60 e0       	ldi	r22, 0x00	; 0
     396:	70 e0       	ldi	r23, 0x00	; 0
     398:	87 e1       	ldi	r24, 0x17	; 23
     39a:	90 e0       	ldi	r25, 0x00	; 0
     39c:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     3a0:	c2 ff       	sbrs	r28, 2
     3a2:	07 c0       	rjmp	.+14     	; 0x3b2 <Lcd4_Port+0x52>
     3a4:	61 e0       	ldi	r22, 0x01	; 1
     3a6:	70 e0       	ldi	r23, 0x00	; 0
     3a8:	88 e1       	ldi	r24, 0x18	; 24
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     3b0:	06 c0       	rjmp	.+12     	; 0x3be <Lcd4_Port+0x5e>
     3b2:	60 e0       	ldi	r22, 0x00	; 0
     3b4:	70 e0       	ldi	r23, 0x00	; 0
     3b6:	88 e1       	ldi	r24, 0x18	; 24
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     3be:	c3 ff       	sbrs	r28, 3
     3c0:	07 c0       	rjmp	.+14     	; 0x3d0 <Lcd4_Port+0x70>
     3c2:	61 e0       	ldi	r22, 0x01	; 1
     3c4:	70 e0       	ldi	r23, 0x00	; 0
     3c6:	89 e1       	ldi	r24, 0x19	; 25
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     3ce:	06 c0       	rjmp	.+12     	; 0x3dc <Lcd4_Port+0x7c>
     3d0:	60 e0       	ldi	r22, 0x00	; 0
     3d2:	70 e0       	ldi	r23, 0x00	; 0
     3d4:	89 e1       	ldi	r24, 0x19	; 25
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     3dc:	cf 91       	pop	r28
     3de:	08 95       	ret

000003e0 <Lcd4_Cmd>:
     3e0:	cf 93       	push	r28
     3e2:	c8 2f       	mov	r28, r24
     3e4:	60 e0       	ldi	r22, 0x00	; 0
     3e6:	70 e0       	ldi	r23, 0x00	; 0
     3e8:	82 e2       	ldi	r24, 0x22	; 34
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     3f0:	8c 2f       	mov	r24, r28
     3f2:	0e 94 b0 01 	call	0x360	; 0x360 <Lcd4_Port>
     3f6:	61 e0       	ldi	r22, 0x01	; 1
     3f8:	70 e0       	ldi	r23, 0x00	; 0
     3fa:	8f e0       	ldi	r24, 0x0F	; 15
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     402:	8f e9       	ldi	r24, 0x9F	; 159
     404:	9f e0       	ldi	r25, 0x0F	; 15
     406:	01 97       	sbiw	r24, 0x01	; 1
     408:	f1 f7       	brne	.-4      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     40a:	00 c0       	rjmp	.+0      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     40c:	00 00       	nop
     40e:	60 e0       	ldi	r22, 0x00	; 0
     410:	70 e0       	ldi	r23, 0x00	; 0
     412:	8f e0       	ldi	r24, 0x0F	; 15
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     41a:	8f e9       	ldi	r24, 0x9F	; 159
     41c:	9f e0       	ldi	r25, 0x0F	; 15
     41e:	01 97       	sbiw	r24, 0x01	; 1
     420:	f1 f7       	brne	.-4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     422:	00 c0       	rjmp	.+0      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
     424:	00 00       	nop
     426:	cf 91       	pop	r28
     428:	08 95       	ret

0000042a <Lcd4_Clear>:
     42a:	80 e0       	ldi	r24, 0x00	; 0
     42c:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd4_Cmd>
     430:	81 e0       	ldi	r24, 0x01	; 1
     432:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd4_Cmd>
     436:	08 95       	ret

00000438 <Lcd4_Init>:
     438:	80 e0       	ldi	r24, 0x00	; 0
     43a:	0e 94 b0 01 	call	0x360	; 0x360 <Lcd4_Port>
     43e:	2f ef       	ldi	r18, 0xFF	; 255
     440:	89 ef       	ldi	r24, 0xF9	; 249
     442:	90 e0       	ldi	r25, 0x00	; 0
     444:	21 50       	subi	r18, 0x01	; 1
     446:	80 40       	sbci	r24, 0x00	; 0
     448:	90 40       	sbci	r25, 0x00	; 0
     44a:	e1 f7       	brne	.-8      	; 0x444 <Lcd4_Init+0xc>
     44c:	00 c0       	rjmp	.+0      	; 0x44e <Lcd4_Init+0x16>
     44e:	00 00       	nop
     450:	83 e0       	ldi	r24, 0x03	; 3
     452:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd4_Cmd>
     456:	8f e1       	ldi	r24, 0x1F	; 31
     458:	9e e4       	ldi	r25, 0x4E	; 78
     45a:	01 97       	sbiw	r24, 0x01	; 1
     45c:	f1 f7       	brne	.-4      	; 0x45a <Lcd4_Init+0x22>
     45e:	00 c0       	rjmp	.+0      	; 0x460 <Lcd4_Init+0x28>
     460:	00 00       	nop
     462:	83 e0       	ldi	r24, 0x03	; 3
     464:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd4_Cmd>
     468:	8f ed       	ldi	r24, 0xDF	; 223
     46a:	9b ea       	ldi	r25, 0xAB	; 171
     46c:	01 97       	sbiw	r24, 0x01	; 1
     46e:	f1 f7       	brne	.-4      	; 0x46c <Lcd4_Init+0x34>
     470:	00 c0       	rjmp	.+0      	; 0x472 <Lcd4_Init+0x3a>
     472:	00 00       	nop
     474:	83 e0       	ldi	r24, 0x03	; 3
     476:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd4_Cmd>
     47a:	82 e0       	ldi	r24, 0x02	; 2
     47c:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd4_Cmd>
     480:	82 e0       	ldi	r24, 0x02	; 2
     482:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd4_Cmd>
     486:	88 e0       	ldi	r24, 0x08	; 8
     488:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd4_Cmd>
     48c:	80 e0       	ldi	r24, 0x00	; 0
     48e:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd4_Cmd>
     492:	8c e0       	ldi	r24, 0x0C	; 12
     494:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd4_Cmd>
     498:	80 e0       	ldi	r24, 0x00	; 0
     49a:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd4_Cmd>
     49e:	86 e0       	ldi	r24, 0x06	; 6
     4a0:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd4_Cmd>
     4a4:	08 95       	ret

000004a6 <Lcd4_Write_Char>:
     4a6:	cf 93       	push	r28
     4a8:	c8 2f       	mov	r28, r24
     4aa:	61 e0       	ldi	r22, 0x01	; 1
     4ac:	70 e0       	ldi	r23, 0x00	; 0
     4ae:	82 e2       	ldi	r24, 0x22	; 34
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     4b6:	8c 2f       	mov	r24, r28
     4b8:	82 95       	swap	r24
     4ba:	8f 70       	andi	r24, 0x0F	; 15
     4bc:	0e 94 b0 01 	call	0x360	; 0x360 <Lcd4_Port>
     4c0:	61 e0       	ldi	r22, 0x01	; 1
     4c2:	70 e0       	ldi	r23, 0x00	; 0
     4c4:	8f e0       	ldi	r24, 0x0F	; 15
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     4cc:	8f e9       	ldi	r24, 0x9F	; 159
     4ce:	9f e0       	ldi	r25, 0x0F	; 15
     4d0:	01 97       	sbiw	r24, 0x01	; 1
     4d2:	f1 f7       	brne	.-4      	; 0x4d0 <Lcd4_Write_Char+0x2a>
     4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <Lcd4_Write_Char+0x30>
     4d6:	00 00       	nop
     4d8:	60 e0       	ldi	r22, 0x00	; 0
     4da:	70 e0       	ldi	r23, 0x00	; 0
     4dc:	8f e0       	ldi	r24, 0x0F	; 15
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     4e4:	8f e9       	ldi	r24, 0x9F	; 159
     4e6:	9f e0       	ldi	r25, 0x0F	; 15
     4e8:	01 97       	sbiw	r24, 0x01	; 1
     4ea:	f1 f7       	brne	.-4      	; 0x4e8 <Lcd4_Write_Char+0x42>
     4ec:	00 c0       	rjmp	.+0      	; 0x4ee <Lcd4_Write_Char+0x48>
     4ee:	00 00       	nop
     4f0:	8c 2f       	mov	r24, r28
     4f2:	8f 70       	andi	r24, 0x0F	; 15
     4f4:	0e 94 b0 01 	call	0x360	; 0x360 <Lcd4_Port>
     4f8:	61 e0       	ldi	r22, 0x01	; 1
     4fa:	70 e0       	ldi	r23, 0x00	; 0
     4fc:	8f e0       	ldi	r24, 0x0F	; 15
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     504:	8f e9       	ldi	r24, 0x9F	; 159
     506:	9f e0       	ldi	r25, 0x0F	; 15
     508:	01 97       	sbiw	r24, 0x01	; 1
     50a:	f1 f7       	brne	.-4      	; 0x508 <Lcd4_Write_Char+0x62>
     50c:	00 c0       	rjmp	.+0      	; 0x50e <Lcd4_Write_Char+0x68>
     50e:	00 00       	nop
     510:	60 e0       	ldi	r22, 0x00	; 0
     512:	70 e0       	ldi	r23, 0x00	; 0
     514:	8f e0       	ldi	r24, 0x0F	; 15
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	0e 94 c8 00 	call	0x190	; 0x190 <pinChange>
     51c:	8f e9       	ldi	r24, 0x9F	; 159
     51e:	9f e0       	ldi	r25, 0x0F	; 15
     520:	01 97       	sbiw	r24, 0x01	; 1
     522:	f1 f7       	brne	.-4      	; 0x520 <Lcd4_Write_Char+0x7a>
     524:	00 c0       	rjmp	.+0      	; 0x526 <Lcd4_Write_Char+0x80>
     526:	00 00       	nop
     528:	cf 91       	pop	r28
     52a:	08 95       	ret

0000052c <Lcd4_Write_String>:
     52c:	cf 93       	push	r28
     52e:	df 93       	push	r29
     530:	ec 01       	movw	r28, r24
     532:	88 81       	ld	r24, Y
     534:	88 23       	and	r24, r24
     536:	31 f0       	breq	.+12     	; 0x544 <Lcd4_Write_String+0x18>
     538:	21 96       	adiw	r28, 0x01	; 1
     53a:	0e 94 53 02 	call	0x4a6	; 0x4a6 <Lcd4_Write_Char>
     53e:	89 91       	ld	r24, Y+
     540:	81 11       	cpse	r24, r1
     542:	fb cf       	rjmp	.-10     	; 0x53a <Lcd4_Write_String+0xe>
     544:	df 91       	pop	r29
     546:	cf 91       	pop	r28
     548:	08 95       	ret

0000054a <USART_init>:




void USART_init(void){
	UBRR0H=(uint8_t)(BAUD_PRESCALLER>>8); //set baud rate
     54a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L=(uint8_t)(BAUD_PRESCALLER);
     54e:	87 e6       	ldi	r24, 0x67	; 103
     550:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0B=(1<<RXEN0)|(1<<TXEN0);//enable transmit
     554:	88 e1       	ldi	r24, 0x18	; 24
     556:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UCSR0C=(3<<UCSZ00);//set 8-bit (default)
     55a:	86 e0       	ldi	r24, 0x06	; 6
     55c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
	
	PORTB |= (1 << 5);
     560:	2d 9a       	sbi	0x05, 5	; 5
     562:	08 95       	ret

00000564 <USART_send>:
}

void USART_send(unsigned char data){
	while(!(UCSR0A&(1<<UDRE0)));  // check if data is sent
     564:	e0 ec       	ldi	r30, 0xC0	; 192
     566:	f0 e0       	ldi	r31, 0x00	; 0
     568:	90 81       	ld	r25, Z
     56a:	95 ff       	sbrs	r25, 5
     56c:	fd cf       	rjmp	.-6      	; 0x568 <USART_send+0x4>
	UDR0= data;
     56e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     572:	08 95       	ret

00000574 <USART_receive>:
	}

	unsigned char USART_receive(void){
		while(!(UCSR0A&(1<<RXC0)));  // Wait to receive data
     574:	e0 ec       	ldi	r30, 0xC0	; 192
     576:	f0 e0       	ldi	r31, 0x00	; 0
     578:	80 81       	ld	r24, Z
     57a:	88 23       	and	r24, r24
     57c:	ec f7       	brge	.-6      	; 0x578 <USART_receive+0x4>
		return UDR0;// Read data from UDR
     57e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	}
     582:	08 95       	ret

00000584 <USART_putstring>:

void USART_putstring(char* fullstring){
     584:	cf 93       	push	r28
     586:	df 93       	push	r29
     588:	ec 01       	movw	r28, r24
	//keep sending until the next char has value 0 (it's null)
	while (*fullstring != 0x00)
     58a:	88 81       	ld	r24, Y
     58c:	88 23       	and	r24, r24
     58e:	31 f0       	breq	.+12     	; 0x59c <USART_putstring+0x18>
     590:	21 96       	adiw	r28, 0x01	; 1
	{
		USART_send(*fullstring ++);
     592:	0e 94 b2 02 	call	0x564	; 0x564 <USART_send>
		return UDR0;// Read data from UDR
	}

void USART_putstring(char* fullstring){
	//keep sending until the next char has value 0 (it's null)
	while (*fullstring != 0x00)
     596:	89 91       	ld	r24, Y+
     598:	81 11       	cpse	r24, r1
     59a:	fb cf       	rjmp	.-10     	; 0x592 <USART_putstring+0xe>
	{
		USART_send(*fullstring ++);
	}
}
     59c:	df 91       	pop	r29
     59e:	cf 91       	pop	r28
     5a0:	08 95       	ret

000005a2 <customDelay>:

void customDelay(int amount){
	for (int i = 0; i < amount; i++)
     5a2:	18 16       	cp	r1, r24
     5a4:	19 06       	cpc	r1, r25
     5a6:	84 f4       	brge	.+32     	; 0x5c8 <customDelay+0x26>
     5a8:	20 e0       	ldi	r18, 0x00	; 0
     5aa:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     5ac:	4f ef       	ldi	r20, 0xFF	; 255
     5ae:	53 ed       	ldi	r21, 0xD3	; 211
     5b0:	60 e3       	ldi	r22, 0x30	; 48
     5b2:	41 50       	subi	r20, 0x01	; 1
     5b4:	50 40       	sbci	r21, 0x00	; 0
     5b6:	60 40       	sbci	r22, 0x00	; 0
     5b8:	e1 f7       	brne	.-8      	; 0x5b2 <customDelay+0x10>
     5ba:	00 c0       	rjmp	.+0      	; 0x5bc <customDelay+0x1a>
     5bc:	00 00       	nop
     5be:	2f 5f       	subi	r18, 0xFF	; 255
     5c0:	3f 4f       	sbci	r19, 0xFF	; 255
     5c2:	82 17       	cp	r24, r18
     5c4:	93 07       	cpc	r25, r19
     5c6:	91 f7       	brne	.-28     	; 0x5ac <customDelay+0xa>
     5c8:	08 95       	ret

000005ca <sendMoisture>:
		_delay_ms(1000);
	}
	
}

int sendMoisture(int level) {
     5ca:	ef 92       	push	r14
     5cc:	ff 92       	push	r15
     5ce:	0f 93       	push	r16
     5d0:	1f 93       	push	r17
     5d2:	cf 93       	push	r28
     5d4:	df 93       	push	r29
     5d6:	cd b7       	in	r28, 0x3d	; 61
     5d8:	de b7       	in	r29, 0x3e	; 62
     5da:	c1 51       	subi	r28, 0x11	; 17
     5dc:	d7 42       	sbci	r29, 0x27	; 39
     5de:	0f b6       	in	r0, 0x3f	; 63
     5e0:	f8 94       	cli
     5e2:	de bf       	out	0x3e, r29	; 62
     5e4:	0f be       	out	0x3f, r0	; 63
     5e6:	cd bf       	out	0x3d, r28	; 61
     5e8:	7c 01       	movw	r14, r24
	
	char s[10001];
			
	dtostrf(level,3,2,s);
     5ea:	bc 01       	movw	r22, r24
     5ec:	99 0f       	add	r25, r25
     5ee:	88 0b       	sbc	r24, r24
     5f0:	99 0b       	sbc	r25, r25
     5f2:	0e 94 85 06 	call	0xd0a	; 0xd0a <__floatsisf>
     5f6:	8e 01       	movw	r16, r28
     5f8:	0f 5f       	subi	r16, 0xFF	; 255
     5fa:	1f 4f       	sbci	r17, 0xFF	; 255
     5fc:	22 e0       	ldi	r18, 0x02	; 2
     5fe:	43 e0       	ldi	r20, 0x03	; 3
     600:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <dtostrf>
			
	USART_putstring(s);
     604:	c8 01       	movw	r24, r16
     606:	0e 94 c2 02 	call	0x584	; 0x584 <USART_putstring>
	USART_send('\n');
     60a:	8a e0       	ldi	r24, 0x0A	; 10
     60c:	0e 94 b2 02 	call	0x564	; 0x564 <USART_send>
     610:	2f ef       	ldi	r18, 0xFF	; 255
     612:	81 ee       	ldi	r24, 0xE1	; 225
     614:	94 e0       	ldi	r25, 0x04	; 4
     616:	21 50       	subi	r18, 0x01	; 1
     618:	80 40       	sbci	r24, 0x00	; 0
     61a:	90 40       	sbci	r25, 0x00	; 0
     61c:	e1 f7       	brne	.-8      	; 0x616 <sendMoisture+0x4c>
     61e:	00 c0       	rjmp	.+0      	; 0x620 <sendMoisture+0x56>
     620:	00 00       	nop
	_delay_ms(100);
	
	return level;
	}
     622:	c7 01       	movw	r24, r14
     624:	cf 5e       	subi	r28, 0xEF	; 239
     626:	d8 4d       	sbci	r29, 0xD8	; 216
     628:	0f b6       	in	r0, 0x3f	; 63
     62a:	f8 94       	cli
     62c:	de bf       	out	0x3e, r29	; 62
     62e:	0f be       	out	0x3f, r0	; 63
     630:	cd bf       	out	0x3d, r28	; 61
     632:	df 91       	pop	r29
     634:	cf 91       	pop	r28
     636:	1f 91       	pop	r17
     638:	0f 91       	pop	r16
     63a:	ff 90       	pop	r15
     63c:	ef 90       	pop	r14
     63e:	08 95       	ret

00000640 <pumpWater>:

int pumpWater(int length) {
     640:	cf 93       	push	r28
     642:	df 93       	push	r29
     644:	ec 01       	movw	r28, r24
	Lcd4_Clear();
     646:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
	Lcd4_Write_String("Pumping...");
     64a:	80 e0       	ldi	r24, 0x00	; 0
     64c:	91 e0       	ldi	r25, 0x01	; 1
     64e:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
	
	PORTD |= (1 << 6);
     652:	5e 9a       	sbi	0x0b, 6	; 11
	customDelay(length);
     654:	ce 01       	movw	r24, r28
     656:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <customDelay>
	PORTD &= ~(1 << 6);
     65a:	5e 98       	cbi	0x0b, 6	; 11
	
	return 2;
}
     65c:	82 e0       	ldi	r24, 0x02	; 2
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	df 91       	pop	r29
     662:	cf 91       	pop	r28
     664:	08 95       	ret

00000666 <drainWater>:

int drainWater(int Dlength) {
     666:	cf 93       	push	r28
     668:	df 93       	push	r29
     66a:	ec 01       	movw	r28, r24
	//2.50 measured time
	
	Lcd4_Write_String("Draining...");
     66c:	8b e0       	ldi	r24, 0x0B	; 11
     66e:	91 e0       	ldi	r25, 0x01	; 1
     670:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
	
	PORTD &= ~(1 << 6);	
     674:	5e 98       	cbi	0x0b, 6	; 11
	PORTD |= (1 << 7);
     676:	5f 9a       	sbi	0x0b, 7	; 11
	customDelay(Dlength);
     678:	ce 01       	movw	r24, r28
     67a:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <customDelay>
	PORTD &= ~(1 << 7);
     67e:	5f 98       	cbi	0x0b, 7	; 11

	return 3;
}
     680:	83 e0       	ldi	r24, 0x03	; 3
     682:	90 e0       	ldi	r25, 0x00	; 0
     684:	df 91       	pop	r29
     686:	cf 91       	pop	r28
     688:	08 95       	ret

0000068a <main>:




int main(void)
{
     68a:	cf 93       	push	r28
     68c:	df 93       	push	r29
     68e:	cd b7       	in	r28, 0x3d	; 61
     690:	de b7       	in	r29, 0x3e	; 62
     692:	ca 51       	subi	r28, 0x1A	; 26
     694:	d7 42       	sbci	r29, 0x27	; 39
     696:	0f b6       	in	r0, 0x3f	; 63
     698:	f8 94       	cli
     69a:	de bf       	out	0x3e, r29	; 62
     69c:	0f be       	out	0x3f, r0	; 63
     69e:	cd bf       	out	0x3d, r28	; 61
	//PD3/2 = floatSwitch1/2 (input)
	//motor PWM on PD5 (out)
	//motor forwward/backwards 7/6 (out)
	
	//setup IO pins
	DDRC = 0b1111110;
     6a0:	8e e7       	ldi	r24, 0x7E	; 126
     6a2:	87 b9       	out	0x07, r24	; 7
	DDRD = 0b00;
     6a4:	1a b8       	out	0x0a, r1	; 10
	DDRD = 0b11110000;
     6a6:	80 ef       	ldi	r24, 0xF0	; 240
     6a8:	8a b9       	out	0x0a, r24	; 10
	DDRB= 0b111110;
     6aa:	8e e3       	ldi	r24, 0x3E	; 62
     6ac:	84 b9       	out	0x04, r24	; 4
	
	//PWM initialization
	DDRD|=(1<<5);
     6ae:	55 9a       	sbi	0x0a, 5	; 10
	TCCR0A=0b00100011;
     6b0:	83 e2       	ldi	r24, 0x23	; 35
     6b2:	84 bd       	out	0x24, r24	; 36
	OCR0B = 255;	
     6b4:	8f ef       	ldi	r24, 0xFF	; 255
     6b6:	88 bd       	out	0x28, r24	; 40
	//PWM on
	TCCR0B=0b101;
     6b8:	85 e0       	ldi	r24, 0x05	; 5
     6ba:	85 bd       	out	0x25, r24	; 37

	//ADC/moisture sensor initialization 	
	ADMUX|=(1<<REFS0); //set reference voltage
     6bc:	ec e7       	ldi	r30, 0x7C	; 124
     6be:	f0 e0       	ldi	r31, 0x00	; 0
     6c0:	80 81       	ld	r24, Z
     6c2:	80 64       	ori	r24, 0x40	; 64
     6c4:	80 83       	st	Z, r24
	ADCSRA|=(1<<ADPS1)|(1<<ADPS0);//ADC clock prescaler/ 8
     6c6:	ea e7       	ldi	r30, 0x7A	; 122
     6c8:	f0 e0       	ldi	r31, 0x00	; 0
     6ca:	80 81       	ld	r24, Z
     6cc:	83 60       	ori	r24, 0x03	; 3
     6ce:	80 83       	st	Z, r24
	ADCSRA|=(1<<ADEN);//enables the ADC
     6d0:	80 81       	ld	r24, Z
     6d2:	80 68       	ori	r24, 0x80	; 128
     6d4:	80 83       	st	Z, r24
		
	int moistureSensor = 0;
     6d6:	cb 5e       	subi	r28, 0xEB	; 235
     6d8:	d8 4d       	sbci	r29, 0xD8	; 216
     6da:	19 82       	std	Y+1, r1	; 0x01
     6dc:	18 82       	st	Y, r1
     6de:	c5 51       	subi	r28, 0x15	; 21
     6e0:	d7 42       	sbci	r29, 0x27	; 39
	int waterTh = 950;
     6e2:	86 eb       	ldi	r24, 0xB6	; 182
     6e4:	93 e0       	ldi	r25, 0x03	; 3
     6e6:	c9 5e       	subi	r28, 0xE9	; 233
     6e8:	d8 4d       	sbci	r29, 0xD8	; 216
     6ea:	99 83       	std	Y+1, r25	; 0x01
     6ec:	88 83       	st	Y, r24
     6ee:	c7 51       	subi	r28, 0x17	; 23
     6f0:	d7 42       	sbci	r29, 0x27	; 39
	int waterAmount = 80;
     6f2:	80 e5       	ldi	r24, 0x50	; 80
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	cd 5e       	subi	r28, 0xED	; 237
     6f8:	d8 4d       	sbci	r29, 0xD8	; 216
     6fa:	99 83       	std	Y+1, r25	; 0x01
     6fc:	88 83       	st	Y, r24
     6fe:	c3 51       	subi	r28, 0x13	; 19
     700:	d7 42       	sbci	r29, 0x27	; 39

	//Serial communication initialization
    USART_init();
     702:	0e 94 a5 02 	call	0x54a	; 0x54a <USART_init>
	char serial = '0';
     706:	80 e3       	ldi	r24, 0x30	; 48
     708:	89 83       	std	Y+1, r24	; 0x01
	
	//Interrupt(s) initialization
	EIMSK = 0b11;
     70a:	83 e0       	ldi	r24, 0x03	; 3
     70c:	8d bb       	out	0x1d, r24	; 29
	sei();
     70e:	78 94       	sei
	
	//LCD initialization
	Lcd4_Init();
     710:	0e 94 1c 02 	call	0x438	; 0x438 <Lcd4_Init>
	
	Lcd4_Write_String("->");
     714:	89 e8       	ldi	r24, 0x89	; 137
     716:	91 e0       	ldi	r25, 0x01	; 1
     718:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
	int menu = 0;
     71c:	c7 5e       	subi	r28, 0xE7	; 231
     71e:	d8 4d       	sbci	r29, 0xD8	; 216
     720:	19 82       	std	Y+1, r1	; 0x01
     722:	18 82       	st	Y, r1
     724:	c9 51       	subi	r28, 0x19	; 25
     726:	d7 42       	sbci	r29, 0x27	; 39
					
					if(i == 0) menu+= 1; //confirm selection (move one menu deeper)
					
					//move across depth (between different options)
					if(i == 1){
						if (menu%1000 ==0){menu += 1000;} //main menus
     728:	0f 2e       	mov	r0, r31
     72a:	f8 ee       	ldi	r31, 0xE8	; 232
     72c:	6f 2e       	mov	r6, r31
     72e:	f3 e0       	ldi	r31, 0x03	; 3
     730:	7f 2e       	mov	r7, r31
     732:	f0 2d       	mov	r31, r0
		userInterface();
		readButtons();
		serialInterface();

		//read in mositure sensor value
		ADCSRA|=(1<<ADSC);//start ADC conversion
     734:	0f 2e       	mov	r0, r31
     736:	fa e7       	ldi	r31, 0x7A	; 122
     738:	ef 2e       	mov	r14, r31
     73a:	f1 2c       	mov	r15, r1
     73c:	f0 2d       	mov	r31, r0
			_delay_ms(10);
			Lcd4_Clear();
			break;
			
			case 2002:
			pumpWater(waterAmount/10);
     73e:	0f 2e       	mov	r0, r31
     740:	fa e0       	ldi	r31, 0x0A	; 10
     742:	cf 2e       	mov	r12, r31
     744:	d1 2c       	mov	r13, r1
     746:	f0 2d       	mov	r31, r0
			menu = 2001;
     748:	0f 2e       	mov	r0, r31
     74a:	f1 ed       	ldi	r31, 0xD1	; 209
     74c:	8f 2e       	mov	r8, r31
     74e:	f7 e0       	ldi	r31, 0x07	; 7
     750:	9f 2e       	mov	r9, r31
     752:	f0 2d       	mov	r31, r0
			Lcd4_Clear();
			break;
			
			case 2102:
			drainWater(waterAmount/10);
			menu = 2101;
     754:	0f 2e       	mov	r0, r31
     756:	f5 e3       	ldi	r31, 0x35	; 53
     758:	af 2e       	mov	r10, r31
     75a:	f8 e0       	ldi	r31, 0x08	; 8
     75c:	bf 2e       	mov	r11, r31
     75e:	f0 2d       	mov	r31, r0
	
	//areas of code put into functions to reduce how much is going on in main loop (while (1){})
	void userInterface(){
		//LCD UI thousands are main menus, hundreds and sub menus and onces are from confirmed selection
		//indenting here represents the depth of the selection (calibrating -> watering early -> updating... is depth 3 so 3 indents)
		switch(menu)
     760:	c7 5e       	subi	r28, 0xE7	; 231
     762:	d8 4d       	sbci	r29, 0xD8	; 216
     764:	88 81       	ld	r24, Y
     766:	99 81       	ldd	r25, Y+1	; 0x01
     768:	c9 51       	subi	r28, 0x19	; 25
     76a:	d7 42       	sbci	r29, 0x27	; 39
     76c:	85 31       	cpi	r24, 0x15	; 21
     76e:	25 e0       	ldi	r18, 0x05	; 5
     770:	92 07       	cpc	r25, r18
     772:	09 f4       	brne	.+2      	; 0x776 <main+0xec>
     774:	ef c0       	rjmp	.+478    	; 0x954 <__stack+0x55>
     776:	24 f5       	brge	.+72     	; 0x7c0 <main+0x136>
     778:	8d 34       	cpi	r24, 0x4D	; 77
     77a:	e4 e0       	ldi	r30, 0x04	; 4
     77c:	9e 07       	cpc	r25, r30
     77e:	09 f4       	brne	.+2      	; 0x782 <main+0xf8>
     780:	85 c0       	rjmp	.+266    	; 0x88c <main+0x202>
     782:	7c f4       	brge	.+30     	; 0x7a2 <main+0x118>
     784:	89 3e       	cpi	r24, 0xE9	; 233
     786:	23 e0       	ldi	r18, 0x03	; 3
     788:	92 07       	cpc	r25, r18
     78a:	09 f4       	brne	.+2      	; 0x78e <main+0x104>
     78c:	4d c0       	rjmp	.+154    	; 0x828 <main+0x19e>
     78e:	8a 3e       	cpi	r24, 0xEA	; 234
     790:	43 e0       	ldi	r20, 0x03	; 3
     792:	94 07       	cpc	r25, r20
     794:	09 f4       	brne	.+2      	; 0x798 <main+0x10e>
     796:	55 c0       	rjmp	.+170    	; 0x842 <main+0x1b8>
     798:	88 3e       	cpi	r24, 0xE8	; 232
     79a:	93 40       	sbci	r25, 0x03	; 3
     79c:	09 f0       	breq	.+2      	; 0x7a0 <main+0x116>
     79e:	8f c1       	rjmp	.+798    	; 0xabe <__stack+0x1bf>
     7a0:	36 c0       	rjmp	.+108    	; 0x80e <main+0x184>
     7a2:	81 3b       	cpi	r24, 0xB1	; 177
     7a4:	f4 e0       	ldi	r31, 0x04	; 4
     7a6:	9f 07       	cpc	r25, r31
     7a8:	09 f4       	brne	.+2      	; 0x7ac <main+0x122>
     7aa:	a2 c0       	rjmp	.+324    	; 0x8f0 <main+0x266>
     7ac:	82 3b       	cpi	r24, 0xB2	; 178
     7ae:	24 e0       	ldi	r18, 0x04	; 4
     7b0:	92 07       	cpc	r25, r18
     7b2:	09 f4       	brne	.+2      	; 0x7b6 <main+0x12c>
     7b4:	aa c0       	rjmp	.+340    	; 0x90a <__stack+0xb>
     7b6:	8e 34       	cpi	r24, 0x4E	; 78
     7b8:	94 40       	sbci	r25, 0x04	; 4
     7ba:	09 f0       	breq	.+2      	; 0x7be <main+0x134>
     7bc:	80 c1       	rjmp	.+768    	; 0xabe <__stack+0x1bf>
     7be:	73 c0       	rjmp	.+230    	; 0x8a6 <main+0x21c>
     7c0:	82 3d       	cpi	r24, 0xD2	; 210
     7c2:	e7 e0       	ldi	r30, 0x07	; 7
     7c4:	9e 07       	cpc	r25, r30
     7c6:	09 f4       	brne	.+2      	; 0x7ca <main+0x140>
     7c8:	1b c1       	rjmp	.+566    	; 0xa00 <__stack+0x101>
     7ca:	64 f4       	brge	.+24     	; 0x7e4 <main+0x15a>
     7cc:	80 3d       	cpi	r24, 0xD0	; 208
     7ce:	27 e0       	ldi	r18, 0x07	; 7
     7d0:	92 07       	cpc	r25, r18
     7d2:	09 f4       	brne	.+2      	; 0x7d6 <main+0x14c>
     7d4:	fb c0       	rjmp	.+502    	; 0x9cc <__stack+0xcd>
     7d6:	0c f0       	brlt	.+2      	; 0x7da <main+0x150>
     7d8:	06 c1       	rjmp	.+524    	; 0x9e6 <__stack+0xe7>
     7da:	86 31       	cpi	r24, 0x16	; 22
     7dc:	95 40       	sbci	r25, 0x05	; 5
     7de:	09 f4       	brne	.+2      	; 0x7e2 <main+0x158>
     7e0:	c6 c0       	rjmp	.+396    	; 0x96e <__stack+0x6f>
     7e2:	6d c1       	rjmp	.+730    	; 0xabe <__stack+0x1bf>
     7e4:	86 33       	cpi	r24, 0x36	; 54
     7e6:	f8 e0       	ldi	r31, 0x08	; 8
     7e8:	9f 07       	cpc	r25, r31
     7ea:	09 f4       	brne	.+2      	; 0x7ee <main+0x164>
     7ec:	29 c1       	rjmp	.+594    	; 0xa40 <__stack+0x141>
     7ee:	2c f4       	brge	.+10     	; 0x7fa <main+0x170>
     7f0:	85 33       	cpi	r24, 0x35	; 53
     7f2:	98 40       	sbci	r25, 0x08	; 8
     7f4:	09 f4       	brne	.+2      	; 0x7f8 <main+0x16e>
     7f6:	17 c1       	rjmp	.+558    	; 0xa26 <__stack+0x127>
     7f8:	62 c1       	rjmp	.+708    	; 0xabe <__stack+0x1bf>
     7fa:	89 39       	cpi	r24, 0x99	; 153
     7fc:	e8 e0       	ldi	r30, 0x08	; 8
     7fe:	9e 07       	cpc	r25, r30
     800:	09 f4       	brne	.+2      	; 0x804 <main+0x17a>
     802:	31 c1       	rjmp	.+610    	; 0xa66 <__stack+0x167>
     804:	8a 39       	cpi	r24, 0x9A	; 154
     806:	98 40       	sbci	r25, 0x08	; 8
     808:	09 f4       	brne	.+2      	; 0x80c <main+0x182>
     80a:	3a c1       	rjmp	.+628    	; 0xa80 <__stack+0x181>
     80c:	58 c1       	rjmp	.+688    	; 0xabe <__stack+0x1bf>
		{
			
			case 1000:
			Lcd4_Write_String("Calibrate ->");
     80e:	87 e1       	ldi	r24, 0x17	; 23
     810:	91 e0       	ldi	r25, 0x01	; 1
     812:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     816:	8f e3       	ldi	r24, 0x3F	; 63
     818:	9c e9       	ldi	r25, 0x9C	; 156
     81a:	01 97       	sbiw	r24, 0x01	; 1
     81c:	f1 f7       	brne	.-4      	; 0x81a <main+0x190>
     81e:	00 c0       	rjmp	.+0      	; 0x820 <main+0x196>
     820:	00 00       	nop
			_delay_ms(10);
			Lcd4_Clear();
     822:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
     826:	5d c1       	rjmp	.+698    	; 0xae2 <__stack+0x1e3>
			break;
			
			case 1001:
			Lcd4_Write_String("Watering early");
     828:	84 e2       	ldi	r24, 0x24	; 36
     82a:	91 e0       	ldi	r25, 0x01	; 1
     82c:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     830:	ef e3       	ldi	r30, 0x3F	; 63
     832:	fc e9       	ldi	r31, 0x9C	; 156
     834:	31 97       	sbiw	r30, 0x01	; 1
     836:	f1 f7       	brne	.-4      	; 0x834 <main+0x1aa>
     838:	00 c0       	rjmp	.+0      	; 0x83a <main+0x1b0>
     83a:	00 00       	nop
			_delay_ms(10);
			Lcd4_Clear();
     83c:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
     840:	50 c1       	rjmp	.+672    	; 0xae2 <__stack+0x1e3>
			break;
			
			case 1002:
			waterTh = waterTh + 1;
     842:	c9 5e       	subi	r28, 0xE9	; 233
     844:	d8 4d       	sbci	r29, 0xD8	; 216
     846:	88 81       	ld	r24, Y
     848:	99 81       	ldd	r25, Y+1	; 0x01
     84a:	c7 51       	subi	r28, 0x17	; 23
     84c:	d7 42       	sbci	r29, 0x27	; 39
     84e:	01 96       	adiw	r24, 0x01	; 1
     850:	c9 5e       	subi	r28, 0xE9	; 233
     852:	d8 4d       	sbci	r29, 0xD8	; 216
     854:	99 83       	std	Y+1, r25	; 0x01
     856:	88 83       	st	Y, r24
     858:	c7 51       	subi	r28, 0x17	; 23
     85a:	d7 42       	sbci	r29, 0x27	; 39
			Lcd4_Write_String("Updated");
     85c:	83 e3       	ldi	r24, 0x33	; 51
     85e:	91 e0       	ldi	r25, 0x01	; 1
     860:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     864:	ff ef       	ldi	r31, 0xFF	; 255
     866:	23 ed       	ldi	r18, 0xD3	; 211
     868:	40 e3       	ldi	r20, 0x30	; 48
     86a:	f1 50       	subi	r31, 0x01	; 1
     86c:	20 40       	sbci	r18, 0x00	; 0
     86e:	40 40       	sbci	r20, 0x00	; 0
     870:	e1 f7       	brne	.-8      	; 0x86a <main+0x1e0>
     872:	00 c0       	rjmp	.+0      	; 0x874 <main+0x1ea>
     874:	00 00       	nop
			_delay_ms(1000);
			Lcd4_Clear();
     876:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
			menu = 1001;
     87a:	89 ee       	ldi	r24, 0xE9	; 233
     87c:	93 e0       	ldi	r25, 0x03	; 3
     87e:	c7 5e       	subi	r28, 0xE7	; 231
     880:	d8 4d       	sbci	r29, 0xD8	; 216
     882:	99 83       	std	Y+1, r25	; 0x01
     884:	88 83       	st	Y, r24
     886:	c9 51       	subi	r28, 0x19	; 25
     888:	d7 42       	sbci	r29, 0x27	; 39
     88a:	2b c1       	rjmp	.+598    	; 0xae2 <__stack+0x1e3>
			break;

			case 1101:
			Lcd4_Write_String("Watering late");
     88c:	8b e3       	ldi	r24, 0x3B	; 59
     88e:	91 e0       	ldi	r25, 0x01	; 1
     890:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     894:	8f e3       	ldi	r24, 0x3F	; 63
     896:	9c e9       	ldi	r25, 0x9C	; 156
     898:	01 97       	sbiw	r24, 0x01	; 1
     89a:	f1 f7       	brne	.-4      	; 0x898 <main+0x20e>
     89c:	00 c0       	rjmp	.+0      	; 0x89e <main+0x214>
     89e:	00 00       	nop
			_delay_ms(10);
			Lcd4_Clear();
     8a0:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
     8a4:	1e c1       	rjmp	.+572    	; 0xae2 <__stack+0x1e3>
			break;
			
			case 1102:
			waterTh = moistureSensor-1;
     8a6:	cb 5e       	subi	r28, 0xEB	; 235
     8a8:	d8 4d       	sbci	r29, 0xD8	; 216
     8aa:	88 81       	ld	r24, Y
     8ac:	99 81       	ldd	r25, Y+1	; 0x01
     8ae:	c5 51       	subi	r28, 0x15	; 21
     8b0:	d7 42       	sbci	r29, 0x27	; 39
     8b2:	01 97       	sbiw	r24, 0x01	; 1
     8b4:	c9 5e       	subi	r28, 0xE9	; 233
     8b6:	d8 4d       	sbci	r29, 0xD8	; 216
     8b8:	99 83       	std	Y+1, r25	; 0x01
     8ba:	88 83       	st	Y, r24
     8bc:	c7 51       	subi	r28, 0x17	; 23
     8be:	d7 42       	sbci	r29, 0x27	; 39
			Lcd4_Write_String("Updated");
     8c0:	83 e3       	ldi	r24, 0x33	; 51
     8c2:	91 e0       	ldi	r25, 0x01	; 1
     8c4:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     8c8:	9f ef       	ldi	r25, 0xFF	; 255
     8ca:	e3 ed       	ldi	r30, 0xD3	; 211
     8cc:	f0 e3       	ldi	r31, 0x30	; 48
     8ce:	91 50       	subi	r25, 0x01	; 1
     8d0:	e0 40       	sbci	r30, 0x00	; 0
     8d2:	f0 40       	sbci	r31, 0x00	; 0
     8d4:	e1 f7       	brne	.-8      	; 0x8ce <main+0x244>
     8d6:	00 c0       	rjmp	.+0      	; 0x8d8 <main+0x24e>
     8d8:	00 00       	nop
			_delay_ms(1000);
			Lcd4_Clear();
     8da:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
			menu = 1101;
     8de:	8d e4       	ldi	r24, 0x4D	; 77
     8e0:	94 e0       	ldi	r25, 0x04	; 4
     8e2:	c7 5e       	subi	r28, 0xE7	; 231
     8e4:	d8 4d       	sbci	r29, 0xD8	; 216
     8e6:	99 83       	std	Y+1, r25	; 0x01
     8e8:	88 83       	st	Y, r24
     8ea:	c9 51       	subi	r28, 0x19	; 25
     8ec:	d7 42       	sbci	r29, 0x27	; 39
     8ee:	f9 c0       	rjmp	.+498    	; 0xae2 <__stack+0x1e3>
			break;
			
			case 1201:
			Lcd4_Write_String("Add 100ml");
     8f0:	89 e4       	ldi	r24, 0x49	; 73
     8f2:	91 e0       	ldi	r25, 0x01	; 1
     8f4:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     8f8:	8f e3       	ldi	r24, 0x3F	; 63
     8fa:	9c e9       	ldi	r25, 0x9C	; 156
     8fc:	01 97       	sbiw	r24, 0x01	; 1
     8fe:	f1 f7       	brne	.-4      	; 0x8fc <main+0x272>
     900:	00 c0       	rjmp	.+0      	; 0x902 <__stack+0x3>
     902:	00 00       	nop
			_delay_ms(10);
			Lcd4_Clear();
     904:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
     908:	ec c0       	rjmp	.+472    	; 0xae2 <__stack+0x1e3>
			break;
			
			
			case 1202:
			waterAmount += 10;
     90a:	cd 5e       	subi	r28, 0xED	; 237
     90c:	d8 4d       	sbci	r29, 0xD8	; 216
     90e:	88 81       	ld	r24, Y
     910:	99 81       	ldd	r25, Y+1	; 0x01
     912:	c3 51       	subi	r28, 0x13	; 19
     914:	d7 42       	sbci	r29, 0x27	; 39
     916:	0a 96       	adiw	r24, 0x0a	; 10
     918:	cd 5e       	subi	r28, 0xED	; 237
     91a:	d8 4d       	sbci	r29, 0xD8	; 216
     91c:	99 83       	std	Y+1, r25	; 0x01
     91e:	88 83       	st	Y, r24
     920:	c3 51       	subi	r28, 0x13	; 19
     922:	d7 42       	sbci	r29, 0x27	; 39
			Lcd4_Write_String("Updated");
     924:	83 e3       	ldi	r24, 0x33	; 51
     926:	91 e0       	ldi	r25, 0x01	; 1
     928:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     92c:	9f ef       	ldi	r25, 0xFF	; 255
     92e:	e3 ed       	ldi	r30, 0xD3	; 211
     930:	f0 e3       	ldi	r31, 0x30	; 48
     932:	91 50       	subi	r25, 0x01	; 1
     934:	e0 40       	sbci	r30, 0x00	; 0
     936:	f0 40       	sbci	r31, 0x00	; 0
     938:	e1 f7       	brne	.-8      	; 0x932 <__stack+0x33>
     93a:	00 c0       	rjmp	.+0      	; 0x93c <__stack+0x3d>
     93c:	00 00       	nop
			_delay_ms(1000);
			Lcd4_Clear();
     93e:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
			menu = 1201;
     942:	81 eb       	ldi	r24, 0xB1	; 177
     944:	94 e0       	ldi	r25, 0x04	; 4
     946:	c7 5e       	subi	r28, 0xE7	; 231
     948:	d8 4d       	sbci	r29, 0xD8	; 216
     94a:	99 83       	std	Y+1, r25	; 0x01
     94c:	88 83       	st	Y, r24
     94e:	c9 51       	subi	r28, 0x19	; 25
     950:	d7 42       	sbci	r29, 0x27	; 39
     952:	c7 c0       	rjmp	.+398    	; 0xae2 <__stack+0x1e3>
			break;
			
			case 1301:
			Lcd4_Write_String("Remove 100ml");
     954:	83 e5       	ldi	r24, 0x53	; 83
     956:	91 e0       	ldi	r25, 0x01	; 1
     958:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     95c:	8f e3       	ldi	r24, 0x3F	; 63
     95e:	9c e9       	ldi	r25, 0x9C	; 156
     960:	01 97       	sbiw	r24, 0x01	; 1
     962:	f1 f7       	brne	.-4      	; 0x960 <__stack+0x61>
     964:	00 c0       	rjmp	.+0      	; 0x966 <__stack+0x67>
     966:	00 00       	nop
			_delay_ms(10);
			Lcd4_Clear();
     968:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
     96c:	ba c0       	rjmp	.+372    	; 0xae2 <__stack+0x1e3>
			break;
			
			case 1302:
			waterAmount += -10;
     96e:	cd 5e       	subi	r28, 0xED	; 237
     970:	d8 4d       	sbci	r29, 0xD8	; 216
     972:	88 81       	ld	r24, Y
     974:	99 81       	ldd	r25, Y+1	; 0x01
     976:	c3 51       	subi	r28, 0x13	; 19
     978:	d7 42       	sbci	r29, 0x27	; 39
     97a:	0a 97       	sbiw	r24, 0x0a	; 10
			if (waterAmount == 0) waterAmount = 1;
     97c:	39 f0       	breq	.+14     	; 0x98c <__stack+0x8d>
			_delay_ms(10);
			Lcd4_Clear();
			break;
			
			case 1302:
			waterAmount += -10;
     97e:	cd 5e       	subi	r28, 0xED	; 237
     980:	d8 4d       	sbci	r29, 0xD8	; 216
     982:	99 83       	std	Y+1, r25	; 0x01
     984:	88 83       	st	Y, r24
     986:	c3 51       	subi	r28, 0x13	; 19
     988:	d7 42       	sbci	r29, 0x27	; 39
     98a:	08 c0       	rjmp	.+16     	; 0x99c <__stack+0x9d>
			if (waterAmount == 0) waterAmount = 1;
     98c:	81 e0       	ldi	r24, 0x01	; 1
     98e:	90 e0       	ldi	r25, 0x00	; 0
     990:	cd 5e       	subi	r28, 0xED	; 237
     992:	d8 4d       	sbci	r29, 0xD8	; 216
     994:	99 83       	std	Y+1, r25	; 0x01
     996:	88 83       	st	Y, r24
     998:	c3 51       	subi	r28, 0x13	; 19
     99a:	d7 42       	sbci	r29, 0x27	; 39
			Lcd4_Write_String("Updated");
     99c:	83 e3       	ldi	r24, 0x33	; 51
     99e:	91 e0       	ldi	r25, 0x01	; 1
     9a0:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     9a4:	9f ef       	ldi	r25, 0xFF	; 255
     9a6:	e3 ed       	ldi	r30, 0xD3	; 211
     9a8:	f0 e3       	ldi	r31, 0x30	; 48
     9aa:	91 50       	subi	r25, 0x01	; 1
     9ac:	e0 40       	sbci	r30, 0x00	; 0
     9ae:	f0 40       	sbci	r31, 0x00	; 0
     9b0:	e1 f7       	brne	.-8      	; 0x9aa <__stack+0xab>
     9b2:	00 c0       	rjmp	.+0      	; 0x9b4 <__stack+0xb5>
     9b4:	00 00       	nop
			_delay_ms(1000);
			Lcd4_Clear();
     9b6:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
			menu = 1301;
     9ba:	85 e1       	ldi	r24, 0x15	; 21
     9bc:	95 e0       	ldi	r25, 0x05	; 5
     9be:	c7 5e       	subi	r28, 0xE7	; 231
     9c0:	d8 4d       	sbci	r29, 0xD8	; 216
     9c2:	99 83       	std	Y+1, r25	; 0x01
     9c4:	88 83       	st	Y, r24
     9c6:	c9 51       	subi	r28, 0x19	; 25
     9c8:	d7 42       	sbci	r29, 0x27	; 39
     9ca:	8b c0       	rjmp	.+278    	; 0xae2 <__stack+0x1e3>
			break;
			
			case 2000:
			Lcd4_Write_String("Test ->");
     9cc:	80 e6       	ldi	r24, 0x60	; 96
     9ce:	91 e0       	ldi	r25, 0x01	; 1
     9d0:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     9d4:	8f e3       	ldi	r24, 0x3F	; 63
     9d6:	9c e9       	ldi	r25, 0x9C	; 156
     9d8:	01 97       	sbiw	r24, 0x01	; 1
     9da:	f1 f7       	brne	.-4      	; 0x9d8 <__stack+0xd9>
     9dc:	00 c0       	rjmp	.+0      	; 0x9de <__stack+0xdf>
     9de:	00 00       	nop
			_delay_ms(10);
			Lcd4_Clear();
     9e0:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
     9e4:	7e c0       	rjmp	.+252    	; 0xae2 <__stack+0x1e3>
			break;
			
			case 2001:
			Lcd4_Write_String("Pump");
     9e6:	88 e6       	ldi	r24, 0x68	; 104
     9e8:	91 e0       	ldi	r25, 0x01	; 1
     9ea:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     9ee:	ef e3       	ldi	r30, 0x3F	; 63
     9f0:	fc e9       	ldi	r31, 0x9C	; 156
     9f2:	31 97       	sbiw	r30, 0x01	; 1
     9f4:	f1 f7       	brne	.-4      	; 0x9f2 <__stack+0xf3>
     9f6:	00 c0       	rjmp	.+0      	; 0x9f8 <__stack+0xf9>
     9f8:	00 00       	nop
			_delay_ms(10);
			Lcd4_Clear();
     9fa:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
     9fe:	71 c0       	rjmp	.+226    	; 0xae2 <__stack+0x1e3>
			break;
			
			case 2002:
			pumpWater(waterAmount/10);
     a00:	cd 5e       	subi	r28, 0xED	; 237
     a02:	d8 4d       	sbci	r29, 0xD8	; 216
     a04:	88 81       	ld	r24, Y
     a06:	99 81       	ldd	r25, Y+1	; 0x01
     a08:	c3 51       	subi	r28, 0x13	; 19
     a0a:	d7 42       	sbci	r29, 0x27	; 39
     a0c:	b6 01       	movw	r22, r12
     a0e:	0e 94 c0 06 	call	0xd80	; 0xd80 <__divmodhi4>
     a12:	cb 01       	movw	r24, r22
     a14:	0e 94 20 03 	call	0x640	; 0x640 <pumpWater>
			menu = 2001;
     a18:	c7 5e       	subi	r28, 0xE7	; 231
     a1a:	d8 4d       	sbci	r29, 0xD8	; 216
     a1c:	99 82       	std	Y+1, r9	; 0x01
     a1e:	88 82       	st	Y, r8
     a20:	c9 51       	subi	r28, 0x19	; 25
     a22:	d7 42       	sbci	r29, 0x27	; 39
     a24:	5e c0       	rjmp	.+188    	; 0xae2 <__stack+0x1e3>
			break;
			
			case 2101:
			Lcd4_Write_String("Drain");
     a26:	8d e6       	ldi	r24, 0x6D	; 109
     a28:	91 e0       	ldi	r25, 0x01	; 1
     a2a:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     a2e:	8f e3       	ldi	r24, 0x3F	; 63
     a30:	9c e9       	ldi	r25, 0x9C	; 156
     a32:	01 97       	sbiw	r24, 0x01	; 1
     a34:	f1 f7       	brne	.-4      	; 0xa32 <__stack+0x133>
     a36:	00 c0       	rjmp	.+0      	; 0xa38 <__stack+0x139>
     a38:	00 00       	nop
			_delay_ms(10);
			Lcd4_Clear();
     a3a:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
     a3e:	51 c0       	rjmp	.+162    	; 0xae2 <__stack+0x1e3>
			break;
			
			case 2102:
			drainWater(waterAmount/10);
     a40:	cd 5e       	subi	r28, 0xED	; 237
     a42:	d8 4d       	sbci	r29, 0xD8	; 216
     a44:	88 81       	ld	r24, Y
     a46:	99 81       	ldd	r25, Y+1	; 0x01
     a48:	c3 51       	subi	r28, 0x13	; 19
     a4a:	d7 42       	sbci	r29, 0x27	; 39
     a4c:	b6 01       	movw	r22, r12
     a4e:	0e 94 c0 06 	call	0xd80	; 0xd80 <__divmodhi4>
     a52:	cb 01       	movw	r24, r22
     a54:	0e 94 33 03 	call	0x666	; 0x666 <drainWater>
			menu = 2101;
     a58:	c7 5e       	subi	r28, 0xE7	; 231
     a5a:	d8 4d       	sbci	r29, 0xD8	; 216
     a5c:	b9 82       	std	Y+1, r11	; 0x01
     a5e:	a8 82       	st	Y, r10
     a60:	c9 51       	subi	r28, 0x19	; 25
     a62:	d7 42       	sbci	r29, 0x27	; 39
     a64:	3e c0       	rjmp	.+124    	; 0xae2 <__stack+0x1e3>
			break;
			
			case 2201:
			Lcd4_Write_String("Sensor Val:");
     a66:	83 e7       	ldi	r24, 0x73	; 115
     a68:	91 e0       	ldi	r25, 0x01	; 1
     a6a:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     a6e:	ef e3       	ldi	r30, 0x3F	; 63
     a70:	fc e9       	ldi	r31, 0x9C	; 156
     a72:	31 97       	sbiw	r30, 0x01	; 1
     a74:	f1 f7       	brne	.-4      	; 0xa72 <__stack+0x173>
     a76:	00 c0       	rjmp	.+0      	; 0xa78 <__stack+0x179>
     a78:	00 00       	nop
			_delay_ms(10);
			Lcd4_Clear();
     a7a:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
     a7e:	31 c0       	rjmp	.+98     	; 0xae2 <__stack+0x1e3>
			break;
			
			case 2202:
			dtostrf(moistureSensor,3,2,s);
     a80:	cb 5e       	subi	r28, 0xEB	; 235
     a82:	d8 4d       	sbci	r29, 0xD8	; 216
     a84:	68 81       	ld	r22, Y
     a86:	79 81       	ldd	r23, Y+1	; 0x01
     a88:	c5 51       	subi	r28, 0x15	; 21
     a8a:	d7 42       	sbci	r29, 0x27	; 39
     a8c:	07 2e       	mov	r0, r23
     a8e:	00 0c       	add	r0, r0
     a90:	88 0b       	sbc	r24, r24
     a92:	99 0b       	sbc	r25, r25
     a94:	0e 94 85 06 	call	0xd0a	; 0xd0a <__floatsisf>
     a98:	8e 01       	movw	r16, r28
     a9a:	0e 5f       	subi	r16, 0xFE	; 254
     a9c:	1f 4f       	sbci	r17, 0xFF	; 255
     a9e:	22 e0       	ldi	r18, 0x02	; 2
     aa0:	43 e0       	ldi	r20, 0x03	; 3
     aa2:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <dtostrf>
			Lcd4_Write_String(s);
     aa6:	c8 01       	movw	r24, r16
     aa8:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     aac:	8f e3       	ldi	r24, 0x3F	; 63
     aae:	9c e9       	ldi	r25, 0x9C	; 156
     ab0:	01 97       	sbiw	r24, 0x01	; 1
     ab2:	f1 f7       	brne	.-4      	; 0xab0 <__stack+0x1b1>
     ab4:	00 c0       	rjmp	.+0      	; 0xab6 <__stack+0x1b7>
     ab6:	00 00       	nop
			_delay_ms(10);
			Lcd4_Clear();
     ab8:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
     abc:	12 c0       	rjmp	.+36     	; 0xae2 <__stack+0x1e3>
			break;
			
			default:
			Lcd4_Write_String("Welcome!! ->");
     abe:	8f e7       	ldi	r24, 0x7F	; 127
     ac0:	91 e0       	ldi	r25, 0x01	; 1
     ac2:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     ac6:	ef e3       	ldi	r30, 0x3F	; 63
     ac8:	fc e9       	ldi	r31, 0x9C	; 156
     aca:	31 97       	sbiw	r30, 0x01	; 1
     acc:	f1 f7       	brne	.-4      	; 0xaca <__stack+0x1cb>
     ace:	00 c0       	rjmp	.+0      	; 0xad0 <__stack+0x1d1>
     ad0:	00 00       	nop
			_delay_ms(10);
			Lcd4_Clear();
     ad2:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
			menu = 0;
     ad6:	c7 5e       	subi	r28, 0xE7	; 231
     ad8:	d8 4d       	sbci	r29, 0xD8	; 216
     ada:	19 82       	std	Y+1, r1	; 0x01
     adc:	18 82       	st	Y, r1
     ade:	c9 51       	subi	r28, 0x19	; 25
     ae0:	d7 42       	sbci	r29, 0x27	; 39
			break;
		}
		Lcd4_Clear();
     ae2:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
			break;
		}
		
	}
	void readButtons(){
		for (int i = 0; i <2; i++){
     ae6:	20 e0       	ldi	r18, 0x00	; 0
     ae8:	30 e0       	ldi	r19, 0x00	; 0

			if(PINB & (1<<i)){
     aea:	83 b1       	in	r24, 0x03	; 3
     aec:	90 e0       	ldi	r25, 0x00	; 0
     aee:	02 2e       	mov	r0, r18
     af0:	02 c0       	rjmp	.+4      	; 0xaf6 <__stack+0x1f7>
     af2:	95 95       	asr	r25
     af4:	87 95       	ror	r24
     af6:	0a 94       	dec	r0
     af8:	e2 f7       	brpl	.-8      	; 0xaf2 <__stack+0x1f3>
     afa:	80 ff       	sbrs	r24, 0
     afc:	4a c0       	rjmp	.+148    	; 0xb92 <__stack+0x293>
     afe:	8f e3       	ldi	r24, 0x3F	; 63
     b00:	9c e9       	ldi	r25, 0x9C	; 156
     b02:	01 97       	sbiw	r24, 0x01	; 1
     b04:	f1 f7       	brne	.-4      	; 0xb02 <__stack+0x203>
     b06:	00 c0       	rjmp	.+0      	; 0xb08 <__stack+0x209>
     b08:	00 00       	nop
				_delay_ms(10);
				//double check to see if switch was actually pressed
				if(PINB & (1<<i)){
     b0a:	83 b1       	in	r24, 0x03	; 3
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	02 2e       	mov	r0, r18
     b10:	02 c0       	rjmp	.+4      	; 0xb16 <__stack+0x217>
     b12:	95 95       	asr	r25
     b14:	87 95       	ror	r24
     b16:	0a 94       	dec	r0
     b18:	e2 f7       	brpl	.-8      	; 0xb12 <__stack+0x213>
     b1a:	80 ff       	sbrs	r24, 0
     b1c:	3a c0       	rjmp	.+116    	; 0xb92 <__stack+0x293>
					
					if(i == 0) menu+= 1; //confirm selection (move one menu deeper)
     b1e:	21 15       	cp	r18, r1
     b20:	31 05       	cpc	r19, r1
     b22:	71 f4       	brne	.+28     	; 0xb40 <__stack+0x241>
     b24:	c7 5e       	subi	r28, 0xE7	; 231
     b26:	d8 4d       	sbci	r29, 0xD8	; 216
     b28:	88 81       	ld	r24, Y
     b2a:	99 81       	ldd	r25, Y+1	; 0x01
     b2c:	c9 51       	subi	r28, 0x19	; 25
     b2e:	d7 42       	sbci	r29, 0x27	; 39
     b30:	01 96       	adiw	r24, 0x01	; 1
     b32:	c7 5e       	subi	r28, 0xE7	; 231
     b34:	d8 4d       	sbci	r29, 0xD8	; 216
     b36:	99 83       	std	Y+1, r25	; 0x01
     b38:	88 83       	st	Y, r24
     b3a:	c9 51       	subi	r28, 0x19	; 25
     b3c:	d7 42       	sbci	r29, 0x27	; 39
     b3e:	20 c0       	rjmp	.+64     	; 0xb80 <__stack+0x281>
					
					//move across depth (between different options)
					if(i == 1){
     b40:	21 30       	cpi	r18, 0x01	; 1
     b42:	31 05       	cpc	r19, r1
     b44:	e9 f4       	brne	.+58     	; 0xb80 <__stack+0x281>
						if (menu%1000 ==0){menu += 1000;} //main menus
     b46:	c7 5e       	subi	r28, 0xE7	; 231
     b48:	d8 4d       	sbci	r29, 0xD8	; 216
     b4a:	e8 81       	ld	r30, Y
     b4c:	f9 81       	ldd	r31, Y+1	; 0x01
     b4e:	c9 51       	subi	r28, 0x19	; 25
     b50:	d7 42       	sbci	r29, 0x27	; 39
     b52:	cf 01       	movw	r24, r30
     b54:	b3 01       	movw	r22, r6
     b56:	0e 94 c0 06 	call	0xd80	; 0xd80 <__divmodhi4>
     b5a:	89 2b       	or	r24, r25
     b5c:	49 f4       	brne	.+18     	; 0xb70 <__stack+0x271>
     b5e:	e8 51       	subi	r30, 0x18	; 24
     b60:	fc 4f       	sbci	r31, 0xFC	; 252
     b62:	c7 5e       	subi	r28, 0xE7	; 231
     b64:	d8 4d       	sbci	r29, 0xD8	; 216
     b66:	f9 83       	std	Y+1, r31	; 0x01
     b68:	e8 83       	st	Y, r30
     b6a:	c9 51       	subi	r28, 0x19	; 25
     b6c:	d7 42       	sbci	r29, 0x27	; 39
     b6e:	08 c0       	rjmp	.+16     	; 0xb80 <__stack+0x281>
						else{menu+=100;} //sub menus
     b70:	ec 59       	subi	r30, 0x9C	; 156
     b72:	ff 4f       	sbci	r31, 0xFF	; 255
     b74:	c7 5e       	subi	r28, 0xE7	; 231
     b76:	d8 4d       	sbci	r29, 0xD8	; 216
     b78:	f9 83       	std	Y+1, r31	; 0x01
     b7a:	e8 83       	st	Y, r30
     b7c:	c9 51       	subi	r28, 0x19	; 25
     b7e:	d7 42       	sbci	r29, 0x27	; 39
     b80:	9f ef       	ldi	r25, 0xFF	; 255
     b82:	e3 ed       	ldi	r30, 0xD3	; 211
     b84:	f0 e3       	ldi	r31, 0x30	; 48
     b86:	91 50       	subi	r25, 0x01	; 1
     b88:	e0 40       	sbci	r30, 0x00	; 0
     b8a:	f0 40       	sbci	r31, 0x00	; 0
     b8c:	e1 f7       	brne	.-8      	; 0xb86 <__stack+0x287>
     b8e:	00 c0       	rjmp	.+0      	; 0xb90 <__stack+0x291>
     b90:	00 00       	nop
			break;
		}
		
	}
	void readButtons(){
		for (int i = 0; i <2; i++){
     b92:	2f 5f       	subi	r18, 0xFF	; 255
     b94:	3f 4f       	sbci	r19, 0xFF	; 255
     b96:	22 30       	cpi	r18, 0x02	; 2
     b98:	31 05       	cpc	r19, r1
     b9a:	09 f0       	breq	.+2      	; 0xb9e <__stack+0x29f>
     b9c:	a6 cf       	rjmp	.-180    	; 0xaea <__stack+0x1eb>
		Lcd4_Clear();
	}
	void serialInterface(){
		
		//if the serial flag is risen then read it (if there's anything coming from th serial bus)
		if ((UCSR0A&(1<<RXC0))) serial = USART_receive();
     b9e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     ba2:	88 23       	and	r24, r24
     ba4:	1c f4       	brge	.+6      	; 0xbac <__stack+0x2ad>
     ba6:	0e 94 ba 02 	call	0x574	; 0x574 <USART_receive>
     baa:	89 83       	std	Y+1, r24	; 0x01
		
		//Serial Debugging
		switch(serial)
     bac:	89 81       	ldd	r24, Y+1	; 0x01
     bae:	82 33       	cpi	r24, 0x32	; 50
     bb0:	91 f0       	breq	.+36     	; 0xbd6 <__stack+0x2d7>
     bb2:	18 f4       	brcc	.+6      	; 0xbba <__stack+0x2bb>
     bb4:	81 33       	cpi	r24, 0x31	; 49
     bb6:	31 f0       	breq	.+12     	; 0xbc4 <__stack+0x2c5>
     bb8:	29 c0       	rjmp	.+82     	; 0xc0c <__stack+0x30d>
     bba:	83 33       	cpi	r24, 0x33	; 51
     bbc:	89 f0       	breq	.+34     	; 0xbe0 <__stack+0x2e1>
     bbe:	84 33       	cpi	r24, 0x34	; 52
     bc0:	a1 f0       	breq	.+40     	; 0xbea <__stack+0x2eb>
     bc2:	24 c0       	rjmp	.+72     	; 0xc0c <__stack+0x30d>
		{
			case '1':
			sendMoisture(moistureSensor);
     bc4:	cb 5e       	subi	r28, 0xEB	; 235
     bc6:	d8 4d       	sbci	r29, 0xD8	; 216
     bc8:	88 81       	ld	r24, Y
     bca:	99 81       	ldd	r25, Y+1	; 0x01
     bcc:	c5 51       	subi	r28, 0x15	; 21
     bce:	d7 42       	sbci	r29, 0x27	; 39
     bd0:	0e 94 e5 02 	call	0x5ca	; 0x5ca <sendMoisture>
     bd4:	1b c0       	rjmp	.+54     	; 0xc0c <__stack+0x30d>
			break;
					
			case '2':
			pumpWater(1);
     bd6:	81 e0       	ldi	r24, 0x01	; 1
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	0e 94 20 03 	call	0x640	; 0x640 <pumpWater>
     bde:	16 c0       	rjmp	.+44     	; 0xc0c <__stack+0x30d>
			break;
					
			case '3':
			drainWater(1);
     be0:	81 e0       	ldi	r24, 0x01	; 1
     be2:	90 e0       	ldi	r25, 0x00	; 0
     be4:	0e 94 33 03 	call	0x666	; 0x666 <drainWater>
     be8:	11 c0       	rjmp	.+34     	; 0xc0c <__stack+0x30d>
			break;
					
			case '4':
			Lcd4_Write_String("Testing....");
     bea:	8c e8       	ldi	r24, 0x8C	; 140
     bec:	91 e0       	ldi	r25, 0x01	; 1
     bee:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     bf2:	2f ef       	ldi	r18, 0xFF	; 255
     bf4:	4b e7       	ldi	r20, 0x7B	; 123
     bf6:	82 e9       	ldi	r24, 0x92	; 146
     bf8:	21 50       	subi	r18, 0x01	; 1
     bfa:	40 40       	sbci	r20, 0x00	; 0
     bfc:	80 40       	sbci	r24, 0x00	; 0
     bfe:	e1 f7       	brne	.-8      	; 0xbf8 <__stack+0x2f9>
     c00:	00 c0       	rjmp	.+0      	; 0xc02 <__stack+0x303>
     c02:	00 00       	nop
			_delay_ms(3000);
			Lcd4_Clear();
     c04:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
			serial = 'q';
     c08:	81 e7       	ldi	r24, 0x71	; 113
     c0a:	89 83       	std	Y+1, r24	; 0x01
		userInterface();
		readButtons();
		serialInterface();

		//read in mositure sensor value
		ADCSRA|=(1<<ADSC);//start ADC conversion
     c0c:	f7 01       	movw	r30, r14
     c0e:	80 81       	ld	r24, Z
     c10:	80 64       	ori	r24, 0x40	; 64
     c12:	80 83       	st	Z, r24
		while((ADCSRA&(1<<ADSC))){} // wait till the ADC is done
     c14:	f7 01       	movw	r30, r14
     c16:	80 81       	ld	r24, Z
     c18:	86 fd       	sbrc	r24, 6
     c1a:	fc cf       	rjmp	.-8      	; 0xc14 <__stack+0x315>
		uint8_t theLowADC=ADCL; //read lower bits
     c1c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
		moistureSensor=ADCH << 8|theLowADC; //read upper bits
     c20:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	92 2b       	or	r25, r18
     c28:	cb 5e       	subi	r28, 0xEB	; 235
     c2a:	d8 4d       	sbci	r29, 0xD8	; 216
     c2c:	99 83       	std	Y+1, r25	; 0x01
     c2e:	88 83       	st	Y, r24
     c30:	c5 51       	subi	r28, 0x15	; 21
     c32:	d7 42       	sbci	r29, 0x27	; 39
		
		//check if the sensor is reading a value above the threshold if it is then water the soil 
		if (moistureSensor > waterTh)
     c34:	c9 5e       	subi	r28, 0xE9	; 233
     c36:	d8 4d       	sbci	r29, 0xD8	; 216
     c38:	28 81       	ld	r18, Y
     c3a:	39 81       	ldd	r19, Y+1	; 0x01
     c3c:	c7 51       	subi	r28, 0x17	; 23
     c3e:	d7 42       	sbci	r29, 0x27	; 39
     c40:	28 17       	cp	r18, r24
     c42:	39 07       	cpc	r19, r25
     c44:	0c f0       	brlt	.+2      	; 0xc48 <__stack+0x349>
     c46:	8c cd       	rjmp	.-1256   	; 0x760 <main+0xd6>
		{
			pumpWater(waterAmount);
     c48:	cd 5e       	subi	r28, 0xED	; 237
     c4a:	d8 4d       	sbci	r29, 0xD8	; 216
     c4c:	88 81       	ld	r24, Y
     c4e:	99 81       	ldd	r25, Y+1	; 0x01
     c50:	c3 51       	subi	r28, 0x13	; 19
     c52:	d7 42       	sbci	r29, 0x27	; 39
     c54:	0e 94 20 03 	call	0x640	; 0x640 <pumpWater>
     c58:	72 cd       	rjmp	.-1308   	; 0x73e <main+0xb4>

00000c5a <__vector_1>:
		}
	}
}
//drip tray full
ISR(INT0_vect){		
     c5a:	1f 92       	push	r1
     c5c:	0f 92       	push	r0
     c5e:	0f b6       	in	r0, 0x3f	; 63
     c60:	0f 92       	push	r0
     c62:	11 24       	eor	r1, r1
     c64:	2f 93       	push	r18
     c66:	3f 93       	push	r19
     c68:	4f 93       	push	r20
     c6a:	5f 93       	push	r21
     c6c:	6f 93       	push	r22
     c6e:	7f 93       	push	r23
     c70:	8f 93       	push	r24
     c72:	9f 93       	push	r25
     c74:	af 93       	push	r26
     c76:	bf 93       	push	r27
     c78:	ef 93       	push	r30
     c7a:	ff 93       	push	r31
	Lcd4_Clear();
     c7c:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
	drainWater(150);	
     c80:	86 e9       	ldi	r24, 0x96	; 150
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	0e 94 33 03 	call	0x666	; 0x666 <drainWater>
}
     c88:	ff 91       	pop	r31
     c8a:	ef 91       	pop	r30
     c8c:	bf 91       	pop	r27
     c8e:	af 91       	pop	r26
     c90:	9f 91       	pop	r25
     c92:	8f 91       	pop	r24
     c94:	7f 91       	pop	r23
     c96:	6f 91       	pop	r22
     c98:	5f 91       	pop	r21
     c9a:	4f 91       	pop	r20
     c9c:	3f 91       	pop	r19
     c9e:	2f 91       	pop	r18
     ca0:	0f 90       	pop	r0
     ca2:	0f be       	out	0x3f, r0	; 63
     ca4:	0f 90       	pop	r0
     ca6:	1f 90       	pop	r1
     ca8:	18 95       	reti

00000caa <__vector_2>:

//water bucket empty
ISR(INT1_vect){
     caa:	1f 92       	push	r1
     cac:	0f 92       	push	r0
     cae:	0f b6       	in	r0, 0x3f	; 63
     cb0:	0f 92       	push	r0
     cb2:	11 24       	eor	r1, r1
     cb4:	2f 93       	push	r18
     cb6:	3f 93       	push	r19
     cb8:	4f 93       	push	r20
     cba:	5f 93       	push	r21
     cbc:	6f 93       	push	r22
     cbe:	7f 93       	push	r23
     cc0:	8f 93       	push	r24
     cc2:	9f 93       	push	r25
     cc4:	af 93       	push	r26
     cc6:	bf 93       	push	r27
     cc8:	ef 93       	push	r30
     cca:	ff 93       	push	r31
	Lcd4_Clear();
     ccc:	0e 94 15 02 	call	0x42a	; 0x42a <Lcd4_Clear>
	Lcd4_Write_String("Refill bucket");
     cd0:	88 e9       	ldi	r24, 0x98	; 152
     cd2:	91 e0       	ldi	r25, 0x01	; 1
     cd4:	0e 94 96 02 	call	0x52c	; 0x52c <Lcd4_Write_String>
     cd8:	8f e3       	ldi	r24, 0x3F	; 63
     cda:	9c e9       	ldi	r25, 0x9C	; 156
     cdc:	01 97       	sbiw	r24, 0x01	; 1
     cde:	f1 f7       	brne	.-4      	; 0xcdc <__vector_2+0x32>
     ce0:	00 c0       	rjmp	.+0      	; 0xce2 <__vector_2+0x38>
     ce2:	00 00       	nop
	_delay_ms(10);
}
     ce4:	ff 91       	pop	r31
     ce6:	ef 91       	pop	r30
     ce8:	bf 91       	pop	r27
     cea:	af 91       	pop	r26
     cec:	9f 91       	pop	r25
     cee:	8f 91       	pop	r24
     cf0:	7f 91       	pop	r23
     cf2:	6f 91       	pop	r22
     cf4:	5f 91       	pop	r21
     cf6:	4f 91       	pop	r20
     cf8:	3f 91       	pop	r19
     cfa:	2f 91       	pop	r18
     cfc:	0f 90       	pop	r0
     cfe:	0f be       	out	0x3f, r0	; 63
     d00:	0f 90       	pop	r0
     d02:	1f 90       	pop	r1
     d04:	18 95       	reti

00000d06 <__floatunsisf>:
     d06:	e8 94       	clt
     d08:	09 c0       	rjmp	.+18     	; 0xd1c <__floatsisf+0x12>

00000d0a <__floatsisf>:
     d0a:	97 fb       	bst	r25, 7
     d0c:	3e f4       	brtc	.+14     	; 0xd1c <__floatsisf+0x12>
     d0e:	90 95       	com	r25
     d10:	80 95       	com	r24
     d12:	70 95       	com	r23
     d14:	61 95       	neg	r22
     d16:	7f 4f       	sbci	r23, 0xFF	; 255
     d18:	8f 4f       	sbci	r24, 0xFF	; 255
     d1a:	9f 4f       	sbci	r25, 0xFF	; 255
     d1c:	99 23       	and	r25, r25
     d1e:	a9 f0       	breq	.+42     	; 0xd4a <__floatsisf+0x40>
     d20:	f9 2f       	mov	r31, r25
     d22:	96 e9       	ldi	r25, 0x96	; 150
     d24:	bb 27       	eor	r27, r27
     d26:	93 95       	inc	r25
     d28:	f6 95       	lsr	r31
     d2a:	87 95       	ror	r24
     d2c:	77 95       	ror	r23
     d2e:	67 95       	ror	r22
     d30:	b7 95       	ror	r27
     d32:	f1 11       	cpse	r31, r1
     d34:	f8 cf       	rjmp	.-16     	; 0xd26 <__floatsisf+0x1c>
     d36:	fa f4       	brpl	.+62     	; 0xd76 <__floatsisf+0x6c>
     d38:	bb 0f       	add	r27, r27
     d3a:	11 f4       	brne	.+4      	; 0xd40 <__floatsisf+0x36>
     d3c:	60 ff       	sbrs	r22, 0
     d3e:	1b c0       	rjmp	.+54     	; 0xd76 <__floatsisf+0x6c>
     d40:	6f 5f       	subi	r22, 0xFF	; 255
     d42:	7f 4f       	sbci	r23, 0xFF	; 255
     d44:	8f 4f       	sbci	r24, 0xFF	; 255
     d46:	9f 4f       	sbci	r25, 0xFF	; 255
     d48:	16 c0       	rjmp	.+44     	; 0xd76 <__floatsisf+0x6c>
     d4a:	88 23       	and	r24, r24
     d4c:	11 f0       	breq	.+4      	; 0xd52 <__floatsisf+0x48>
     d4e:	96 e9       	ldi	r25, 0x96	; 150
     d50:	11 c0       	rjmp	.+34     	; 0xd74 <__floatsisf+0x6a>
     d52:	77 23       	and	r23, r23
     d54:	21 f0       	breq	.+8      	; 0xd5e <__floatsisf+0x54>
     d56:	9e e8       	ldi	r25, 0x8E	; 142
     d58:	87 2f       	mov	r24, r23
     d5a:	76 2f       	mov	r23, r22
     d5c:	05 c0       	rjmp	.+10     	; 0xd68 <__floatsisf+0x5e>
     d5e:	66 23       	and	r22, r22
     d60:	71 f0       	breq	.+28     	; 0xd7e <__floatsisf+0x74>
     d62:	96 e8       	ldi	r25, 0x86	; 134
     d64:	86 2f       	mov	r24, r22
     d66:	70 e0       	ldi	r23, 0x00	; 0
     d68:	60 e0       	ldi	r22, 0x00	; 0
     d6a:	2a f0       	brmi	.+10     	; 0xd76 <__floatsisf+0x6c>
     d6c:	9a 95       	dec	r25
     d6e:	66 0f       	add	r22, r22
     d70:	77 1f       	adc	r23, r23
     d72:	88 1f       	adc	r24, r24
     d74:	da f7       	brpl	.-10     	; 0xd6c <__floatsisf+0x62>
     d76:	88 0f       	add	r24, r24
     d78:	96 95       	lsr	r25
     d7a:	87 95       	ror	r24
     d7c:	97 f9       	bld	r25, 7
     d7e:	08 95       	ret

00000d80 <__divmodhi4>:
     d80:	97 fb       	bst	r25, 7
     d82:	07 2e       	mov	r0, r23
     d84:	16 f4       	brtc	.+4      	; 0xd8a <__divmodhi4+0xa>
     d86:	00 94       	com	r0
     d88:	07 d0       	rcall	.+14     	; 0xd98 <__divmodhi4_neg1>
     d8a:	77 fd       	sbrc	r23, 7
     d8c:	09 d0       	rcall	.+18     	; 0xda0 <__divmodhi4_neg2>
     d8e:	0e 94 d4 06 	call	0xda8	; 0xda8 <__udivmodhi4>
     d92:	07 fc       	sbrc	r0, 7
     d94:	05 d0       	rcall	.+10     	; 0xda0 <__divmodhi4_neg2>
     d96:	3e f4       	brtc	.+14     	; 0xda6 <__divmodhi4_exit>

00000d98 <__divmodhi4_neg1>:
     d98:	90 95       	com	r25
     d9a:	81 95       	neg	r24
     d9c:	9f 4f       	sbci	r25, 0xFF	; 255
     d9e:	08 95       	ret

00000da0 <__divmodhi4_neg2>:
     da0:	70 95       	com	r23
     da2:	61 95       	neg	r22
     da4:	7f 4f       	sbci	r23, 0xFF	; 255

00000da6 <__divmodhi4_exit>:
     da6:	08 95       	ret

00000da8 <__udivmodhi4>:
     da8:	aa 1b       	sub	r26, r26
     daa:	bb 1b       	sub	r27, r27
     dac:	51 e1       	ldi	r21, 0x11	; 17
     dae:	07 c0       	rjmp	.+14     	; 0xdbe <__udivmodhi4_ep>

00000db0 <__udivmodhi4_loop>:
     db0:	aa 1f       	adc	r26, r26
     db2:	bb 1f       	adc	r27, r27
     db4:	a6 17       	cp	r26, r22
     db6:	b7 07       	cpc	r27, r23
     db8:	10 f0       	brcs	.+4      	; 0xdbe <__udivmodhi4_ep>
     dba:	a6 1b       	sub	r26, r22
     dbc:	b7 0b       	sbc	r27, r23

00000dbe <__udivmodhi4_ep>:
     dbe:	88 1f       	adc	r24, r24
     dc0:	99 1f       	adc	r25, r25
     dc2:	5a 95       	dec	r21
     dc4:	a9 f7       	brne	.-22     	; 0xdb0 <__udivmodhi4_loop>
     dc6:	80 95       	com	r24
     dc8:	90 95       	com	r25
     dca:	bc 01       	movw	r22, r24
     dcc:	cd 01       	movw	r24, r26
     dce:	08 95       	ret

00000dd0 <dtostrf>:
     dd0:	ef 92       	push	r14
     dd2:	0f 93       	push	r16
     dd4:	1f 93       	push	r17
     dd6:	cf 93       	push	r28
     dd8:	df 93       	push	r29
     dda:	e8 01       	movw	r28, r16
     ddc:	47 fd       	sbrc	r20, 7
     dde:	02 c0       	rjmp	.+4      	; 0xde4 <dtostrf+0x14>
     de0:	34 e0       	ldi	r19, 0x04	; 4
     de2:	01 c0       	rjmp	.+2      	; 0xde6 <dtostrf+0x16>
     de4:	34 e1       	ldi	r19, 0x14	; 20
     de6:	04 2e       	mov	r0, r20
     de8:	00 0c       	add	r0, r0
     dea:	55 0b       	sbc	r21, r21
     dec:	57 ff       	sbrs	r21, 7
     dee:	03 c0       	rjmp	.+6      	; 0xdf6 <dtostrf+0x26>
     df0:	51 95       	neg	r21
     df2:	41 95       	neg	r20
     df4:	51 09       	sbc	r21, r1
     df6:	e3 2e       	mov	r14, r19
     df8:	02 2f       	mov	r16, r18
     dfa:	24 2f       	mov	r18, r20
     dfc:	ae 01       	movw	r20, r28
     dfe:	0e 94 08 07 	call	0xe10	; 0xe10 <dtoa_prf>
     e02:	ce 01       	movw	r24, r28
     e04:	df 91       	pop	r29
     e06:	cf 91       	pop	r28
     e08:	1f 91       	pop	r17
     e0a:	0f 91       	pop	r16
     e0c:	ef 90       	pop	r14
     e0e:	08 95       	ret

00000e10 <dtoa_prf>:
     e10:	a9 e0       	ldi	r26, 0x09	; 9
     e12:	b0 e0       	ldi	r27, 0x00	; 0
     e14:	ee e0       	ldi	r30, 0x0E	; 14
     e16:	f7 e0       	ldi	r31, 0x07	; 7
     e18:	0c 94 40 09 	jmp	0x1280	; 0x1280 <__prologue_saves__+0xc>
     e1c:	6a 01       	movw	r12, r20
     e1e:	12 2f       	mov	r17, r18
     e20:	b0 2e       	mov	r11, r16
     e22:	2b e3       	ldi	r18, 0x3B	; 59
     e24:	20 17       	cp	r18, r16
     e26:	20 f0       	brcs	.+8      	; 0xe30 <dtoa_prf+0x20>
     e28:	ff 24       	eor	r15, r15
     e2a:	f3 94       	inc	r15
     e2c:	f0 0e       	add	r15, r16
     e2e:	02 c0       	rjmp	.+4      	; 0xe34 <dtoa_prf+0x24>
     e30:	2c e3       	ldi	r18, 0x3C	; 60
     e32:	f2 2e       	mov	r15, r18
     e34:	0f 2d       	mov	r16, r15
     e36:	27 e0       	ldi	r18, 0x07	; 7
     e38:	ae 01       	movw	r20, r28
     e3a:	4f 5f       	subi	r20, 0xFF	; 255
     e3c:	5f 4f       	sbci	r21, 0xFF	; 255
     e3e:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__ftoa_engine>
     e42:	bc 01       	movw	r22, r24
     e44:	49 81       	ldd	r20, Y+1	; 0x01
     e46:	84 2f       	mov	r24, r20
     e48:	89 70       	andi	r24, 0x09	; 9
     e4a:	81 30       	cpi	r24, 0x01	; 1
     e4c:	31 f0       	breq	.+12     	; 0xe5a <dtoa_prf+0x4a>
     e4e:	e1 fc       	sbrc	r14, 1
     e50:	06 c0       	rjmp	.+12     	; 0xe5e <dtoa_prf+0x4e>
     e52:	e0 fe       	sbrs	r14, 0
     e54:	06 c0       	rjmp	.+12     	; 0xe62 <dtoa_prf+0x52>
     e56:	90 e2       	ldi	r25, 0x20	; 32
     e58:	05 c0       	rjmp	.+10     	; 0xe64 <dtoa_prf+0x54>
     e5a:	9d e2       	ldi	r25, 0x2D	; 45
     e5c:	03 c0       	rjmp	.+6      	; 0xe64 <dtoa_prf+0x54>
     e5e:	9b e2       	ldi	r25, 0x2B	; 43
     e60:	01 c0       	rjmp	.+2      	; 0xe64 <dtoa_prf+0x54>
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	5e 2d       	mov	r21, r14
     e66:	50 71       	andi	r21, 0x10	; 16
     e68:	43 ff       	sbrs	r20, 3
     e6a:	3c c0       	rjmp	.+120    	; 0xee4 <dtoa_prf+0xd4>
     e6c:	91 11       	cpse	r25, r1
     e6e:	02 c0       	rjmp	.+4      	; 0xe74 <dtoa_prf+0x64>
     e70:	83 e0       	ldi	r24, 0x03	; 3
     e72:	01 c0       	rjmp	.+2      	; 0xe76 <dtoa_prf+0x66>
     e74:	84 e0       	ldi	r24, 0x04	; 4
     e76:	81 17       	cp	r24, r17
     e78:	18 f4       	brcc	.+6      	; 0xe80 <dtoa_prf+0x70>
     e7a:	21 2f       	mov	r18, r17
     e7c:	28 1b       	sub	r18, r24
     e7e:	01 c0       	rjmp	.+2      	; 0xe82 <dtoa_prf+0x72>
     e80:	20 e0       	ldi	r18, 0x00	; 0
     e82:	51 11       	cpse	r21, r1
     e84:	0b c0       	rjmp	.+22     	; 0xe9c <dtoa_prf+0x8c>
     e86:	f6 01       	movw	r30, r12
     e88:	82 2f       	mov	r24, r18
     e8a:	30 e2       	ldi	r19, 0x20	; 32
     e8c:	88 23       	and	r24, r24
     e8e:	19 f0       	breq	.+6      	; 0xe96 <dtoa_prf+0x86>
     e90:	31 93       	st	Z+, r19
     e92:	81 50       	subi	r24, 0x01	; 1
     e94:	fb cf       	rjmp	.-10     	; 0xe8c <dtoa_prf+0x7c>
     e96:	c2 0e       	add	r12, r18
     e98:	d1 1c       	adc	r13, r1
     e9a:	20 e0       	ldi	r18, 0x00	; 0
     e9c:	99 23       	and	r25, r25
     e9e:	29 f0       	breq	.+10     	; 0xeaa <dtoa_prf+0x9a>
     ea0:	d6 01       	movw	r26, r12
     ea2:	9c 93       	st	X, r25
     ea4:	f6 01       	movw	r30, r12
     ea6:	31 96       	adiw	r30, 0x01	; 1
     ea8:	6f 01       	movw	r12, r30
     eaa:	c6 01       	movw	r24, r12
     eac:	03 96       	adiw	r24, 0x03	; 3
     eae:	e2 fe       	sbrs	r14, 2
     eb0:	0a c0       	rjmp	.+20     	; 0xec6 <dtoa_prf+0xb6>
     eb2:	3e e4       	ldi	r19, 0x4E	; 78
     eb4:	d6 01       	movw	r26, r12
     eb6:	3c 93       	st	X, r19
     eb8:	41 e4       	ldi	r20, 0x41	; 65
     eba:	11 96       	adiw	r26, 0x01	; 1
     ebc:	4c 93       	st	X, r20
     ebe:	11 97       	sbiw	r26, 0x01	; 1
     ec0:	12 96       	adiw	r26, 0x02	; 2
     ec2:	3c 93       	st	X, r19
     ec4:	06 c0       	rjmp	.+12     	; 0xed2 <dtoa_prf+0xc2>
     ec6:	3e e6       	ldi	r19, 0x6E	; 110
     ec8:	f6 01       	movw	r30, r12
     eca:	30 83       	st	Z, r19
     ecc:	41 e6       	ldi	r20, 0x61	; 97
     ece:	41 83       	std	Z+1, r20	; 0x01
     ed0:	32 83       	std	Z+2, r19	; 0x02
     ed2:	fc 01       	movw	r30, r24
     ed4:	32 2f       	mov	r19, r18
     ed6:	40 e2       	ldi	r20, 0x20	; 32
     ed8:	33 23       	and	r19, r19
     eda:	09 f4       	brne	.+2      	; 0xede <dtoa_prf+0xce>
     edc:	42 c0       	rjmp	.+132    	; 0xf62 <dtoa_prf+0x152>
     ede:	41 93       	st	Z+, r20
     ee0:	31 50       	subi	r19, 0x01	; 1
     ee2:	fa cf       	rjmp	.-12     	; 0xed8 <dtoa_prf+0xc8>
     ee4:	42 ff       	sbrs	r20, 2
     ee6:	44 c0       	rjmp	.+136    	; 0xf70 <dtoa_prf+0x160>
     ee8:	91 11       	cpse	r25, r1
     eea:	02 c0       	rjmp	.+4      	; 0xef0 <dtoa_prf+0xe0>
     eec:	83 e0       	ldi	r24, 0x03	; 3
     eee:	01 c0       	rjmp	.+2      	; 0xef2 <dtoa_prf+0xe2>
     ef0:	84 e0       	ldi	r24, 0x04	; 4
     ef2:	81 17       	cp	r24, r17
     ef4:	18 f4       	brcc	.+6      	; 0xefc <dtoa_prf+0xec>
     ef6:	21 2f       	mov	r18, r17
     ef8:	28 1b       	sub	r18, r24
     efa:	01 c0       	rjmp	.+2      	; 0xefe <dtoa_prf+0xee>
     efc:	20 e0       	ldi	r18, 0x00	; 0
     efe:	51 11       	cpse	r21, r1
     f00:	0b c0       	rjmp	.+22     	; 0xf18 <dtoa_prf+0x108>
     f02:	f6 01       	movw	r30, r12
     f04:	82 2f       	mov	r24, r18
     f06:	30 e2       	ldi	r19, 0x20	; 32
     f08:	88 23       	and	r24, r24
     f0a:	19 f0       	breq	.+6      	; 0xf12 <dtoa_prf+0x102>
     f0c:	31 93       	st	Z+, r19
     f0e:	81 50       	subi	r24, 0x01	; 1
     f10:	fb cf       	rjmp	.-10     	; 0xf08 <dtoa_prf+0xf8>
     f12:	c2 0e       	add	r12, r18
     f14:	d1 1c       	adc	r13, r1
     f16:	20 e0       	ldi	r18, 0x00	; 0
     f18:	99 23       	and	r25, r25
     f1a:	29 f0       	breq	.+10     	; 0xf26 <dtoa_prf+0x116>
     f1c:	d6 01       	movw	r26, r12
     f1e:	9c 93       	st	X, r25
     f20:	f6 01       	movw	r30, r12
     f22:	31 96       	adiw	r30, 0x01	; 1
     f24:	6f 01       	movw	r12, r30
     f26:	c6 01       	movw	r24, r12
     f28:	03 96       	adiw	r24, 0x03	; 3
     f2a:	e2 fe       	sbrs	r14, 2
     f2c:	0b c0       	rjmp	.+22     	; 0xf44 <dtoa_prf+0x134>
     f2e:	39 e4       	ldi	r19, 0x49	; 73
     f30:	d6 01       	movw	r26, r12
     f32:	3c 93       	st	X, r19
     f34:	3e e4       	ldi	r19, 0x4E	; 78
     f36:	11 96       	adiw	r26, 0x01	; 1
     f38:	3c 93       	st	X, r19
     f3a:	11 97       	sbiw	r26, 0x01	; 1
     f3c:	36 e4       	ldi	r19, 0x46	; 70
     f3e:	12 96       	adiw	r26, 0x02	; 2
     f40:	3c 93       	st	X, r19
     f42:	07 c0       	rjmp	.+14     	; 0xf52 <dtoa_prf+0x142>
     f44:	39 e6       	ldi	r19, 0x69	; 105
     f46:	f6 01       	movw	r30, r12
     f48:	30 83       	st	Z, r19
     f4a:	3e e6       	ldi	r19, 0x6E	; 110
     f4c:	31 83       	std	Z+1, r19	; 0x01
     f4e:	36 e6       	ldi	r19, 0x66	; 102
     f50:	32 83       	std	Z+2, r19	; 0x02
     f52:	fc 01       	movw	r30, r24
     f54:	32 2f       	mov	r19, r18
     f56:	40 e2       	ldi	r20, 0x20	; 32
     f58:	33 23       	and	r19, r19
     f5a:	19 f0       	breq	.+6      	; 0xf62 <dtoa_prf+0x152>
     f5c:	41 93       	st	Z+, r20
     f5e:	31 50       	subi	r19, 0x01	; 1
     f60:	fb cf       	rjmp	.-10     	; 0xf58 <dtoa_prf+0x148>
     f62:	fc 01       	movw	r30, r24
     f64:	e2 0f       	add	r30, r18
     f66:	f1 1d       	adc	r31, r1
     f68:	10 82       	st	Z, r1
     f6a:	8e ef       	ldi	r24, 0xFE	; 254
     f6c:	9f ef       	ldi	r25, 0xFF	; 255
     f6e:	a6 c0       	rjmp	.+332    	; 0x10bc <dtoa_prf+0x2ac>
     f70:	21 e0       	ldi	r18, 0x01	; 1
     f72:	30 e0       	ldi	r19, 0x00	; 0
     f74:	91 11       	cpse	r25, r1
     f76:	02 c0       	rjmp	.+4      	; 0xf7c <dtoa_prf+0x16c>
     f78:	20 e0       	ldi	r18, 0x00	; 0
     f7a:	30 e0       	ldi	r19, 0x00	; 0
     f7c:	16 16       	cp	r1, r22
     f7e:	17 06       	cpc	r1, r23
     f80:	1c f4       	brge	.+6      	; 0xf88 <dtoa_prf+0x178>
     f82:	fb 01       	movw	r30, r22
     f84:	31 96       	adiw	r30, 0x01	; 1
     f86:	02 c0       	rjmp	.+4      	; 0xf8c <dtoa_prf+0x17c>
     f88:	e1 e0       	ldi	r30, 0x01	; 1
     f8a:	f0 e0       	ldi	r31, 0x00	; 0
     f8c:	2e 0f       	add	r18, r30
     f8e:	3f 1f       	adc	r19, r31
     f90:	bb 20       	and	r11, r11
     f92:	21 f0       	breq	.+8      	; 0xf9c <dtoa_prf+0x18c>
     f94:	eb 2d       	mov	r30, r11
     f96:	f0 e0       	ldi	r31, 0x00	; 0
     f98:	31 96       	adiw	r30, 0x01	; 1
     f9a:	02 c0       	rjmp	.+4      	; 0xfa0 <dtoa_prf+0x190>
     f9c:	e0 e0       	ldi	r30, 0x00	; 0
     f9e:	f0 e0       	ldi	r31, 0x00	; 0
     fa0:	2e 0f       	add	r18, r30
     fa2:	3f 1f       	adc	r19, r31
     fa4:	e1 2f       	mov	r30, r17
     fa6:	f0 e0       	ldi	r31, 0x00	; 0
     fa8:	2e 17       	cp	r18, r30
     faa:	3f 07       	cpc	r19, r31
     fac:	1c f4       	brge	.+6      	; 0xfb4 <dtoa_prf+0x1a4>
     fae:	12 1b       	sub	r17, r18
     fb0:	21 2f       	mov	r18, r17
     fb2:	01 c0       	rjmp	.+2      	; 0xfb6 <dtoa_prf+0x1a6>
     fb4:	20 e0       	ldi	r18, 0x00	; 0
     fb6:	8e 2d       	mov	r24, r14
     fb8:	88 71       	andi	r24, 0x18	; 24
     fba:	59 f4       	brne	.+22     	; 0xfd2 <dtoa_prf+0x1c2>
     fbc:	f6 01       	movw	r30, r12
     fbe:	82 2f       	mov	r24, r18
     fc0:	30 e2       	ldi	r19, 0x20	; 32
     fc2:	88 23       	and	r24, r24
     fc4:	19 f0       	breq	.+6      	; 0xfcc <dtoa_prf+0x1bc>
     fc6:	31 93       	st	Z+, r19
     fc8:	81 50       	subi	r24, 0x01	; 1
     fca:	fb cf       	rjmp	.-10     	; 0xfc2 <dtoa_prf+0x1b2>
     fcc:	c2 0e       	add	r12, r18
     fce:	d1 1c       	adc	r13, r1
     fd0:	20 e0       	ldi	r18, 0x00	; 0
     fd2:	99 23       	and	r25, r25
     fd4:	29 f0       	breq	.+10     	; 0xfe0 <dtoa_prf+0x1d0>
     fd6:	d6 01       	movw	r26, r12
     fd8:	9c 93       	st	X, r25
     fda:	f6 01       	movw	r30, r12
     fdc:	31 96       	adiw	r30, 0x01	; 1
     fde:	6f 01       	movw	r12, r30
     fe0:	51 11       	cpse	r21, r1
     fe2:	0b c0       	rjmp	.+22     	; 0xffa <dtoa_prf+0x1ea>
     fe4:	f6 01       	movw	r30, r12
     fe6:	82 2f       	mov	r24, r18
     fe8:	90 e3       	ldi	r25, 0x30	; 48
     fea:	88 23       	and	r24, r24
     fec:	19 f0       	breq	.+6      	; 0xff4 <dtoa_prf+0x1e4>
     fee:	91 93       	st	Z+, r25
     ff0:	81 50       	subi	r24, 0x01	; 1
     ff2:	fb cf       	rjmp	.-10     	; 0xfea <dtoa_prf+0x1da>
     ff4:	c2 0e       	add	r12, r18
     ff6:	d1 1c       	adc	r13, r1
     ff8:	20 e0       	ldi	r18, 0x00	; 0
     ffa:	0f 2d       	mov	r16, r15
     ffc:	06 0f       	add	r16, r22
     ffe:	9a 81       	ldd	r25, Y+2	; 0x02
    1000:	34 2f       	mov	r19, r20
    1002:	30 71       	andi	r19, 0x10	; 16
    1004:	44 ff       	sbrs	r20, 4
    1006:	03 c0       	rjmp	.+6      	; 0x100e <dtoa_prf+0x1fe>
    1008:	91 33       	cpi	r25, 0x31	; 49
    100a:	09 f4       	brne	.+2      	; 0x100e <dtoa_prf+0x1fe>
    100c:	01 50       	subi	r16, 0x01	; 1
    100e:	10 16       	cp	r1, r16
    1010:	24 f4       	brge	.+8      	; 0x101a <dtoa_prf+0x20a>
    1012:	09 30       	cpi	r16, 0x09	; 9
    1014:	18 f0       	brcs	.+6      	; 0x101c <dtoa_prf+0x20c>
    1016:	08 e0       	ldi	r16, 0x08	; 8
    1018:	01 c0       	rjmp	.+2      	; 0x101c <dtoa_prf+0x20c>
    101a:	01 e0       	ldi	r16, 0x01	; 1
    101c:	ab 01       	movw	r20, r22
    101e:	77 ff       	sbrs	r23, 7
    1020:	02 c0       	rjmp	.+4      	; 0x1026 <dtoa_prf+0x216>
    1022:	40 e0       	ldi	r20, 0x00	; 0
    1024:	50 e0       	ldi	r21, 0x00	; 0
    1026:	fb 01       	movw	r30, r22
    1028:	e4 1b       	sub	r30, r20
    102a:	f5 0b       	sbc	r31, r21
    102c:	a1 e0       	ldi	r26, 0x01	; 1
    102e:	b0 e0       	ldi	r27, 0x00	; 0
    1030:	ac 0f       	add	r26, r28
    1032:	bd 1f       	adc	r27, r29
    1034:	ea 0f       	add	r30, r26
    1036:	fb 1f       	adc	r31, r27
    1038:	8e e2       	ldi	r24, 0x2E	; 46
    103a:	a8 2e       	mov	r10, r24
    103c:	4b 01       	movw	r8, r22
    103e:	80 1a       	sub	r8, r16
    1040:	91 08       	sbc	r9, r1
    1042:	0b 2d       	mov	r16, r11
    1044:	10 e0       	ldi	r17, 0x00	; 0
    1046:	11 95       	neg	r17
    1048:	01 95       	neg	r16
    104a:	11 09       	sbc	r17, r1
    104c:	4f 3f       	cpi	r20, 0xFF	; 255
    104e:	bf ef       	ldi	r27, 0xFF	; 255
    1050:	5b 07       	cpc	r21, r27
    1052:	21 f4       	brne	.+8      	; 0x105c <dtoa_prf+0x24c>
    1054:	d6 01       	movw	r26, r12
    1056:	ac 92       	st	X, r10
    1058:	11 96       	adiw	r26, 0x01	; 1
    105a:	6d 01       	movw	r12, r26
    105c:	64 17       	cp	r22, r20
    105e:	75 07       	cpc	r23, r21
    1060:	2c f0       	brlt	.+10     	; 0x106c <dtoa_prf+0x25c>
    1062:	84 16       	cp	r8, r20
    1064:	95 06       	cpc	r9, r21
    1066:	14 f4       	brge	.+4      	; 0x106c <dtoa_prf+0x25c>
    1068:	81 81       	ldd	r24, Z+1	; 0x01
    106a:	01 c0       	rjmp	.+2      	; 0x106e <dtoa_prf+0x25e>
    106c:	80 e3       	ldi	r24, 0x30	; 48
    106e:	41 50       	subi	r20, 0x01	; 1
    1070:	51 09       	sbc	r21, r1
    1072:	31 96       	adiw	r30, 0x01	; 1
    1074:	d6 01       	movw	r26, r12
    1076:	11 96       	adiw	r26, 0x01	; 1
    1078:	7d 01       	movw	r14, r26
    107a:	40 17       	cp	r20, r16
    107c:	51 07       	cpc	r21, r17
    107e:	24 f0       	brlt	.+8      	; 0x1088 <dtoa_prf+0x278>
    1080:	d6 01       	movw	r26, r12
    1082:	8c 93       	st	X, r24
    1084:	67 01       	movw	r12, r14
    1086:	e2 cf       	rjmp	.-60     	; 0x104c <dtoa_prf+0x23c>
    1088:	64 17       	cp	r22, r20
    108a:	75 07       	cpc	r23, r21
    108c:	39 f4       	brne	.+14     	; 0x109c <dtoa_prf+0x28c>
    108e:	96 33       	cpi	r25, 0x36	; 54
    1090:	20 f4       	brcc	.+8      	; 0x109a <dtoa_prf+0x28a>
    1092:	95 33       	cpi	r25, 0x35	; 53
    1094:	19 f4       	brne	.+6      	; 0x109c <dtoa_prf+0x28c>
    1096:	31 11       	cpse	r19, r1
    1098:	01 c0       	rjmp	.+2      	; 0x109c <dtoa_prf+0x28c>
    109a:	81 e3       	ldi	r24, 0x31	; 49
    109c:	f6 01       	movw	r30, r12
    109e:	80 83       	st	Z, r24
    10a0:	f7 01       	movw	r30, r14
    10a2:	82 2f       	mov	r24, r18
    10a4:	90 e2       	ldi	r25, 0x20	; 32
    10a6:	88 23       	and	r24, r24
    10a8:	19 f0       	breq	.+6      	; 0x10b0 <dtoa_prf+0x2a0>
    10aa:	91 93       	st	Z+, r25
    10ac:	81 50       	subi	r24, 0x01	; 1
    10ae:	fb cf       	rjmp	.-10     	; 0x10a6 <dtoa_prf+0x296>
    10b0:	f7 01       	movw	r30, r14
    10b2:	e2 0f       	add	r30, r18
    10b4:	f1 1d       	adc	r31, r1
    10b6:	10 82       	st	Z, r1
    10b8:	80 e0       	ldi	r24, 0x00	; 0
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	29 96       	adiw	r28, 0x09	; 9
    10be:	ec e0       	ldi	r30, 0x0C	; 12
    10c0:	0c 94 5c 09 	jmp	0x12b8	; 0x12b8 <__epilogue_restores__+0xc>

000010c4 <__ftoa_engine>:
    10c4:	28 30       	cpi	r18, 0x08	; 8
    10c6:	08 f0       	brcs	.+2      	; 0x10ca <__ftoa_engine+0x6>
    10c8:	27 e0       	ldi	r18, 0x07	; 7
    10ca:	33 27       	eor	r19, r19
    10cc:	da 01       	movw	r26, r20
    10ce:	99 0f       	add	r25, r25
    10d0:	31 1d       	adc	r19, r1
    10d2:	87 fd       	sbrc	r24, 7
    10d4:	91 60       	ori	r25, 0x01	; 1
    10d6:	00 96       	adiw	r24, 0x00	; 0
    10d8:	61 05       	cpc	r22, r1
    10da:	71 05       	cpc	r23, r1
    10dc:	39 f4       	brne	.+14     	; 0x10ec <__ftoa_engine+0x28>
    10de:	32 60       	ori	r19, 0x02	; 2
    10e0:	2e 5f       	subi	r18, 0xFE	; 254
    10e2:	3d 93       	st	X+, r19
    10e4:	30 e3       	ldi	r19, 0x30	; 48
    10e6:	2a 95       	dec	r18
    10e8:	e1 f7       	brne	.-8      	; 0x10e2 <__ftoa_engine+0x1e>
    10ea:	08 95       	ret
    10ec:	9f 3f       	cpi	r25, 0xFF	; 255
    10ee:	30 f0       	brcs	.+12     	; 0x10fc <__ftoa_engine+0x38>
    10f0:	80 38       	cpi	r24, 0x80	; 128
    10f2:	71 05       	cpc	r23, r1
    10f4:	61 05       	cpc	r22, r1
    10f6:	09 f0       	breq	.+2      	; 0x10fa <__ftoa_engine+0x36>
    10f8:	3c 5f       	subi	r19, 0xFC	; 252
    10fa:	3c 5f       	subi	r19, 0xFC	; 252
    10fc:	3d 93       	st	X+, r19
    10fe:	91 30       	cpi	r25, 0x01	; 1
    1100:	08 f0       	brcs	.+2      	; 0x1104 <__ftoa_engine+0x40>
    1102:	80 68       	ori	r24, 0x80	; 128
    1104:	91 1d       	adc	r25, r1
    1106:	df 93       	push	r29
    1108:	cf 93       	push	r28
    110a:	1f 93       	push	r17
    110c:	0f 93       	push	r16
    110e:	ff 92       	push	r15
    1110:	ef 92       	push	r14
    1112:	19 2f       	mov	r17, r25
    1114:	98 7f       	andi	r25, 0xF8	; 248
    1116:	96 95       	lsr	r25
    1118:	e9 2f       	mov	r30, r25
    111a:	96 95       	lsr	r25
    111c:	96 95       	lsr	r25
    111e:	e9 0f       	add	r30, r25
    1120:	ff 27       	eor	r31, r31
    1122:	ee 53       	subi	r30, 0x3E	; 62
    1124:	ff 4f       	sbci	r31, 0xFF	; 255
    1126:	99 27       	eor	r25, r25
    1128:	33 27       	eor	r19, r19
    112a:	ee 24       	eor	r14, r14
    112c:	ff 24       	eor	r15, r15
    112e:	a7 01       	movw	r20, r14
    1130:	e7 01       	movw	r28, r14
    1132:	05 90       	lpm	r0, Z+
    1134:	08 94       	sec
    1136:	07 94       	ror	r0
    1138:	28 f4       	brcc	.+10     	; 0x1144 <__ftoa_engine+0x80>
    113a:	36 0f       	add	r19, r22
    113c:	e7 1e       	adc	r14, r23
    113e:	f8 1e       	adc	r15, r24
    1140:	49 1f       	adc	r20, r25
    1142:	51 1d       	adc	r21, r1
    1144:	66 0f       	add	r22, r22
    1146:	77 1f       	adc	r23, r23
    1148:	88 1f       	adc	r24, r24
    114a:	99 1f       	adc	r25, r25
    114c:	06 94       	lsr	r0
    114e:	a1 f7       	brne	.-24     	; 0x1138 <__ftoa_engine+0x74>
    1150:	05 90       	lpm	r0, Z+
    1152:	07 94       	ror	r0
    1154:	28 f4       	brcc	.+10     	; 0x1160 <__ftoa_engine+0x9c>
    1156:	e7 0e       	add	r14, r23
    1158:	f8 1e       	adc	r15, r24
    115a:	49 1f       	adc	r20, r25
    115c:	56 1f       	adc	r21, r22
    115e:	c1 1d       	adc	r28, r1
    1160:	77 0f       	add	r23, r23
    1162:	88 1f       	adc	r24, r24
    1164:	99 1f       	adc	r25, r25
    1166:	66 1f       	adc	r22, r22
    1168:	06 94       	lsr	r0
    116a:	a1 f7       	brne	.-24     	; 0x1154 <__ftoa_engine+0x90>
    116c:	05 90       	lpm	r0, Z+
    116e:	07 94       	ror	r0
    1170:	28 f4       	brcc	.+10     	; 0x117c <__ftoa_engine+0xb8>
    1172:	f8 0e       	add	r15, r24
    1174:	49 1f       	adc	r20, r25
    1176:	56 1f       	adc	r21, r22
    1178:	c7 1f       	adc	r28, r23
    117a:	d1 1d       	adc	r29, r1
    117c:	88 0f       	add	r24, r24
    117e:	99 1f       	adc	r25, r25
    1180:	66 1f       	adc	r22, r22
    1182:	77 1f       	adc	r23, r23
    1184:	06 94       	lsr	r0
    1186:	a1 f7       	brne	.-24     	; 0x1170 <__ftoa_engine+0xac>
    1188:	05 90       	lpm	r0, Z+
    118a:	07 94       	ror	r0
    118c:	20 f4       	brcc	.+8      	; 0x1196 <__ftoa_engine+0xd2>
    118e:	49 0f       	add	r20, r25
    1190:	56 1f       	adc	r21, r22
    1192:	c7 1f       	adc	r28, r23
    1194:	d8 1f       	adc	r29, r24
    1196:	99 0f       	add	r25, r25
    1198:	66 1f       	adc	r22, r22
    119a:	77 1f       	adc	r23, r23
    119c:	88 1f       	adc	r24, r24
    119e:	06 94       	lsr	r0
    11a0:	a9 f7       	brne	.-22     	; 0x118c <__ftoa_engine+0xc8>
    11a2:	84 91       	lpm	r24, Z
    11a4:	10 95       	com	r17
    11a6:	17 70       	andi	r17, 0x07	; 7
    11a8:	41 f0       	breq	.+16     	; 0x11ba <__ftoa_engine+0xf6>
    11aa:	d6 95       	lsr	r29
    11ac:	c7 95       	ror	r28
    11ae:	57 95       	ror	r21
    11b0:	47 95       	ror	r20
    11b2:	f7 94       	ror	r15
    11b4:	e7 94       	ror	r14
    11b6:	1a 95       	dec	r17
    11b8:	c1 f7       	brne	.-16     	; 0x11aa <__ftoa_engine+0xe6>
    11ba:	e8 e6       	ldi	r30, 0x68	; 104
    11bc:	f0 e0       	ldi	r31, 0x00	; 0
    11be:	68 94       	set
    11c0:	15 90       	lpm	r1, Z+
    11c2:	15 91       	lpm	r17, Z+
    11c4:	35 91       	lpm	r19, Z+
    11c6:	65 91       	lpm	r22, Z+
    11c8:	95 91       	lpm	r25, Z+
    11ca:	05 90       	lpm	r0, Z+
    11cc:	7f e2       	ldi	r23, 0x2F	; 47
    11ce:	73 95       	inc	r23
    11d0:	e1 18       	sub	r14, r1
    11d2:	f1 0a       	sbc	r15, r17
    11d4:	43 0b       	sbc	r20, r19
    11d6:	56 0b       	sbc	r21, r22
    11d8:	c9 0b       	sbc	r28, r25
    11da:	d0 09       	sbc	r29, r0
    11dc:	c0 f7       	brcc	.-16     	; 0x11ce <__ftoa_engine+0x10a>
    11de:	e1 0c       	add	r14, r1
    11e0:	f1 1e       	adc	r15, r17
    11e2:	43 1f       	adc	r20, r19
    11e4:	56 1f       	adc	r21, r22
    11e6:	c9 1f       	adc	r28, r25
    11e8:	d0 1d       	adc	r29, r0
    11ea:	7e f4       	brtc	.+30     	; 0x120a <__ftoa_engine+0x146>
    11ec:	70 33       	cpi	r23, 0x30	; 48
    11ee:	11 f4       	brne	.+4      	; 0x11f4 <__ftoa_engine+0x130>
    11f0:	8a 95       	dec	r24
    11f2:	e6 cf       	rjmp	.-52     	; 0x11c0 <__ftoa_engine+0xfc>
    11f4:	e8 94       	clt
    11f6:	01 50       	subi	r16, 0x01	; 1
    11f8:	30 f0       	brcs	.+12     	; 0x1206 <__ftoa_engine+0x142>
    11fa:	08 0f       	add	r16, r24
    11fc:	0a f4       	brpl	.+2      	; 0x1200 <__ftoa_engine+0x13c>
    11fe:	00 27       	eor	r16, r16
    1200:	02 17       	cp	r16, r18
    1202:	08 f4       	brcc	.+2      	; 0x1206 <__ftoa_engine+0x142>
    1204:	20 2f       	mov	r18, r16
    1206:	23 95       	inc	r18
    1208:	02 2f       	mov	r16, r18
    120a:	7a 33       	cpi	r23, 0x3A	; 58
    120c:	28 f0       	brcs	.+10     	; 0x1218 <__ftoa_engine+0x154>
    120e:	79 e3       	ldi	r23, 0x39	; 57
    1210:	7d 93       	st	X+, r23
    1212:	2a 95       	dec	r18
    1214:	e9 f7       	brne	.-6      	; 0x1210 <__ftoa_engine+0x14c>
    1216:	10 c0       	rjmp	.+32     	; 0x1238 <__ftoa_engine+0x174>
    1218:	7d 93       	st	X+, r23
    121a:	2a 95       	dec	r18
    121c:	89 f6       	brne	.-94     	; 0x11c0 <__ftoa_engine+0xfc>
    121e:	06 94       	lsr	r0
    1220:	97 95       	ror	r25
    1222:	67 95       	ror	r22
    1224:	37 95       	ror	r19
    1226:	17 95       	ror	r17
    1228:	17 94       	ror	r1
    122a:	e1 18       	sub	r14, r1
    122c:	f1 0a       	sbc	r15, r17
    122e:	43 0b       	sbc	r20, r19
    1230:	56 0b       	sbc	r21, r22
    1232:	c9 0b       	sbc	r28, r25
    1234:	d0 09       	sbc	r29, r0
    1236:	98 f0       	brcs	.+38     	; 0x125e <__ftoa_engine+0x19a>
    1238:	23 95       	inc	r18
    123a:	7e 91       	ld	r23, -X
    123c:	73 95       	inc	r23
    123e:	7a 33       	cpi	r23, 0x3A	; 58
    1240:	08 f0       	brcs	.+2      	; 0x1244 <__ftoa_engine+0x180>
    1242:	70 e3       	ldi	r23, 0x30	; 48
    1244:	7c 93       	st	X, r23
    1246:	20 13       	cpse	r18, r16
    1248:	b8 f7       	brcc	.-18     	; 0x1238 <__ftoa_engine+0x174>
    124a:	7e 91       	ld	r23, -X
    124c:	70 61       	ori	r23, 0x10	; 16
    124e:	7d 93       	st	X+, r23
    1250:	30 f0       	brcs	.+12     	; 0x125e <__ftoa_engine+0x19a>
    1252:	83 95       	inc	r24
    1254:	71 e3       	ldi	r23, 0x31	; 49
    1256:	7d 93       	st	X+, r23
    1258:	70 e3       	ldi	r23, 0x30	; 48
    125a:	2a 95       	dec	r18
    125c:	e1 f7       	brne	.-8      	; 0x1256 <__ftoa_engine+0x192>
    125e:	11 24       	eor	r1, r1
    1260:	ef 90       	pop	r14
    1262:	ff 90       	pop	r15
    1264:	0f 91       	pop	r16
    1266:	1f 91       	pop	r17
    1268:	cf 91       	pop	r28
    126a:	df 91       	pop	r29
    126c:	99 27       	eor	r25, r25
    126e:	87 fd       	sbrc	r24, 7
    1270:	90 95       	com	r25
    1272:	08 95       	ret

00001274 <__prologue_saves__>:
    1274:	2f 92       	push	r2
    1276:	3f 92       	push	r3
    1278:	4f 92       	push	r4
    127a:	5f 92       	push	r5
    127c:	6f 92       	push	r6
    127e:	7f 92       	push	r7
    1280:	8f 92       	push	r8
    1282:	9f 92       	push	r9
    1284:	af 92       	push	r10
    1286:	bf 92       	push	r11
    1288:	cf 92       	push	r12
    128a:	df 92       	push	r13
    128c:	ef 92       	push	r14
    128e:	ff 92       	push	r15
    1290:	0f 93       	push	r16
    1292:	1f 93       	push	r17
    1294:	cf 93       	push	r28
    1296:	df 93       	push	r29
    1298:	cd b7       	in	r28, 0x3d	; 61
    129a:	de b7       	in	r29, 0x3e	; 62
    129c:	ca 1b       	sub	r28, r26
    129e:	db 0b       	sbc	r29, r27
    12a0:	0f b6       	in	r0, 0x3f	; 63
    12a2:	f8 94       	cli
    12a4:	de bf       	out	0x3e, r29	; 62
    12a6:	0f be       	out	0x3f, r0	; 63
    12a8:	cd bf       	out	0x3d, r28	; 61
    12aa:	09 94       	ijmp

000012ac <__epilogue_restores__>:
    12ac:	2a 88       	ldd	r2, Y+18	; 0x12
    12ae:	39 88       	ldd	r3, Y+17	; 0x11
    12b0:	48 88       	ldd	r4, Y+16	; 0x10
    12b2:	5f 84       	ldd	r5, Y+15	; 0x0f
    12b4:	6e 84       	ldd	r6, Y+14	; 0x0e
    12b6:	7d 84       	ldd	r7, Y+13	; 0x0d
    12b8:	8c 84       	ldd	r8, Y+12	; 0x0c
    12ba:	9b 84       	ldd	r9, Y+11	; 0x0b
    12bc:	aa 84       	ldd	r10, Y+10	; 0x0a
    12be:	b9 84       	ldd	r11, Y+9	; 0x09
    12c0:	c8 84       	ldd	r12, Y+8	; 0x08
    12c2:	df 80       	ldd	r13, Y+7	; 0x07
    12c4:	ee 80       	ldd	r14, Y+6	; 0x06
    12c6:	fd 80       	ldd	r15, Y+5	; 0x05
    12c8:	0c 81       	ldd	r16, Y+4	; 0x04
    12ca:	1b 81       	ldd	r17, Y+3	; 0x03
    12cc:	aa 81       	ldd	r26, Y+2	; 0x02
    12ce:	b9 81       	ldd	r27, Y+1	; 0x01
    12d0:	ce 0f       	add	r28, r30
    12d2:	d1 1d       	adc	r29, r1
    12d4:	0f b6       	in	r0, 0x3f	; 63
    12d6:	f8 94       	cli
    12d8:	de bf       	out	0x3e, r29	; 62
    12da:	0f be       	out	0x3f, r0	; 63
    12dc:	cd bf       	out	0x3d, r28	; 61
    12de:	ed 01       	movw	r28, r26
    12e0:	08 95       	ret

000012e2 <_exit>:
    12e2:	f8 94       	cli

000012e4 <__stop_program>:
    12e4:	ff cf       	rjmp	.-2      	; 0x12e4 <__stop_program>
